

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Jul 09 11:21:44 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _INTCON	set	4082
    59  0000                     _PORTB	set	3969
    60  0000                     _PORTDbits	set	3971
    61  0000                     _PORTBbits	set	3969
    62  0000                     _PORTD	set	3971
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TRISB	set	3987
    65  0000                     _CMCON	set	4020
    66  0000                     _ADCON1	set	4033
    67  0000                     _T0CONbits	set	4053
    68  0000                     _TMR0L	set	4054
    69  0000                     _TMR0H	set	4055
    70  0000                     _TRISD	set	3989
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  001400                     __pcinit:
    76                           	callstack 0
    77  001400                     start_initialization:
    78                           	callstack 0
    79  001400                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (33 bytes)
    83  001400  EE00  F029         	lfsr	0,__pbssCOMRAM
    84  001404  0E21               	movlw	33
    85  001406                     clear_0:
    86  001406  6AEE               	clrf	postinc0,c
    87  001408  06E8               	decf	wreg,f,c
    88  00140A  E1FD               	bnz	clear_0
    89  00140C                     end_of_initialization:
    90                           	callstack 0
    91  00140C                     __end_of__initialization:
    92                           	callstack 0
    93  00140C  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  00140E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  001410  0100               	movlb	0
    96  001412  EF09  F000         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  000029                     __pbssCOMRAM:
   100                           	callstack 0
   101  000029                     _pisca:
   102                           	callstack 0
   103  000029                     	ds	2
   104  00002B                     _cont:
   105                           	callstack 0
   106  00002B                     	ds	1
   107  00002C                     _cor:
   108                           	callstack 0
   109  00002C                     	ds	1
   110  00002D                     _conta:
   111                           	callstack 0
   112  00002D                     	ds	1
   113  00002E                     _linha:
   114                           	callstack 0
   115  00002E                     	ds	1
   116  00002F                     _cursor:
   117                           	callstack 0
   118  00002F                     	ds	9
   119  000038                     _vermelho:
   120                           	callstack 0
   121  000038                     	ds	9
   122  000041                     _verde:
   123                           	callstack 0
   124  000041                     	ds	9
   125                           
   126                           	psect	cstackCOMRAM
   127  000001                     __pcstackCOMRAM:
   128                           	callstack 0
   129  000001                     ??_interrupt_PIC:
   130  000001                     
   131                           ; 1 bytes @ 0x0
   132  000001                     	ds	7
   133  000008                     ?___awdiv:
   134                           	callstack 0
   135  000008                     ?___awmod:
   136                           	callstack 0
   137  000008                     testa_ganhou@teste:
   138                           	callstack 0
   139  000008                     testa_velha@teste1:
   140                           	callstack 0
   141  000008                     limpa_matriz@matriz:
   142                           	callstack 0
   143  000008                     ___awdiv@dividend:
   144                           	callstack 0
   145  000008                     ___awmod@dividend:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x7
   149  000008                     	ds	2
   150  00000A                     ??_limpa_matriz:
   151  00000A                     testa_velha@teste2:
   152                           	callstack 0
   153  00000A                     ___awdiv@divisor:
   154                           	callstack 0
   155  00000A                     ___awmod@divisor:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x9
   159  00000A                     	ds	2
   160  00000C                     ??_testa_velha:
   161  00000C                     limpa_matriz@i:
   162                           	callstack 0
   163  00000C                     ___awdiv@counter:
   164                           	callstack 0
   165  00000C                     ___awmod@counter:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0xB
   169  00000C                     	ds	1
   170  00000D                     limpa_matriz@j:
   171                           	callstack 0
   172  00000D                     ___awdiv@sign:
   173                           	callstack 0
   174  00000D                     ___awmod@sign:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0xC
   178  00000D                     	ds	1
   179  00000E                     ___awdiv@quotient:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xD
   183  00000E                     	ds	2
   184  000010                     ?___wmul:
   185                           	callstack 0
   186  000010                     ___wmul@multiplier:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0xF
   190  000010                     	ds	1
   191  000011                     testa_velha@soma:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x10
   195  000011                     	ds	1
   196  000012                     testa_velha@i:
   197                           	callstack 0
   198  000012                     ___wmul@multiplicand:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x11
   202  000012                     	ds	1
   203  000013                     testa_velha@j:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x12
   207  000013                     	ds	1
   208  000014                     ___wmul@product:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x13
   212  000014                     	ds	2
   213  000016                     ??_main:
   214                           
   215                           ; 1 bytes @ 0x15
   216  000016                     	ds	3
   217  000019                     main@marcados:
   218                           	callstack 0
   219                           
   220                           ; 9 bytes @ 0x18
   221  000019                     	ds	9
   222  000022                     main@SEL_Old:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x21
   226  000022                     	ds	1
   227  000023                     main@MOVE_Old:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x22
   231  000023                     	ds	1
   232  000024                     main@aux:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x23
   236  000024                     	ds	1
   237  000025                     main@pontuacao_vermelho:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x24
   241  000025                     	ds	1
   242  000026                     main@pontuacao_verde:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x25
   246  000026                     	ds	1
   247  000027                     main@i:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x26
   251  000027                     	ds	1
   252  000028                     main@posicao:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x27
   256  000028                     	ds	1
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 155 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  marcados        9   24[COMRAM] unsigned char [3][3]
   268 ;;  posicao         1   39[COMRAM] char 
   269 ;;  i               1   38[COMRAM] unsigned char 
   270 ;;  pontuacao_ve    1   37[COMRAM] unsigned char 
   271 ;;  pontuacao_ve    1   36[COMRAM] unsigned char 
   272 ;;  aux             1   35[COMRAM] unsigned char 
   273 ;;  MOVE_Old        1   34[COMRAM] unsigned char 
   274 ;;  SEL_Old         1   33[COMRAM] unsigned char 
   275 ;;  j               1    0        unsigned char 
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   285 ;;      Params:         0       0       0       0       0       0       0
   286 ;;      Locals:        16       0       0       0       0       0       0
   287 ;;      Temps:          3       0       0       0       0       0       0
   288 ;;      Totals:        19       0       0       0       0       0       0
   289 ;;Total ram usage:       19 bytes
   290 ;; Hardware stack levels required when called: 2
   291 ;; This function calls:
   292 ;;		___awdiv
   293 ;;		___awmod
   294 ;;		___wmul
   295 ;;		_conf_interrupt
   296 ;;		_limpa_matriz
   297 ;;		_testa_ganhou
   298 ;;		_testa_velha
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  000012                     __ptext0:
   306                           	callstack 0
   307  000012                     _main:
   308                           	callstack 29
   309  000012                     
   310                           ;main.c: 158:     SEL_Old = 1;;main.c: 159:     cursor[0][0] = 1;;main.c: 160:     cor =
      +                           0;
   311  000012  ECF3  F009         	call	_conf_interrupt	;wreg free
   312  000016                     
   313                           ;main.c: 163:     pontuacao_verde = 0;
   314  000016  0E41               	movlw	low _verde
   315  000018  6E08               	movwf	limpa_matriz@matriz^0,c
   316  00001A  0E00               	movlw	high _verde
   317  00001C  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
   318  00001E  ECB7  F009         	call	_limpa_matriz	;wreg free
   319  000022                     
   320                           ;main.c: 164: 
   321  000022  0E38               	movlw	low _vermelho
   322  000024  6E08               	movwf	limpa_matriz@matriz^0,c
   323  000026  0E00               	movlw	high _vermelho
   324  000028  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
   325  00002A  ECB7  F009         	call	_limpa_matriz	;wreg free
   326  00002E                     
   327                           ;main.c: 165: 
   328  00002E  0E2F               	movlw	low _cursor
   329  000030  6E08               	movwf	limpa_matriz@matriz^0,c
   330  000032  0E00               	movlw	high _cursor
   331  000034  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
   332  000036  ECB7  F009         	call	_limpa_matriz	;wreg free
   333  00003A                     
   334                           ;main.c: 166: 
   335  00003A  0E19               	movlw	low main@marcados
   336  00003C  6E08               	movwf	limpa_matriz@matriz^0,c
   337  00003E  0E00               	movlw	high main@marcados
   338  000040  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
   339  000042  ECB7  F009         	call	_limpa_matriz	;wreg free
   340  000046                     
   341                           ;main.c: 168:     TRISB = 0x18;
   342  000046  0E00               	movlw	0
   343  000048  6E2A               	movwf	(_pisca+1)^0,c
   344  00004A  0E01               	movlw	1
   345  00004C  6E29               	movwf	_pisca^0,c
   346  00004E                     
   347                           ;main.c: 169:     TRISD = 0x00;
   348  00004E  0E00               	movlw	0
   349  000050  6E2E               	movwf	_linha^0,c
   350  000052                     
   351                           ;main.c: 170:     PORTB = 1;
   352  000052  6828               	setf	main@posicao^0,c
   353  000054                     
   354                           ;main.c: 171:     PORTD = 0;
   355  000054  0E01               	movlw	1
   356  000056  6E23               	movwf	main@MOVE_Old^0,c
   357  000058                     
   358                           ;main.c: 172:     TMR0H = 11;
   359  000058  0E01               	movlw	1
   360  00005A  6E22               	movwf	main@SEL_Old^0,c
   361  00005C                     
   362                           ;main.c: 173:     INTCON = 0xA0;
   363  00005C  0E01               	movlw	1
   364  00005E  6E2F               	movwf	_cursor^0,c
   365  000060                     
   366                           ;main.c: 174: 
   367  000060  0E00               	movlw	0
   368  000062  6E2C               	movwf	_cor^0,c
   369  000064                     
   370                           ;main.c: 176:     {
   371  000064  0E00               	movlw	0
   372  000066  6E25               	movwf	main@pontuacao_vermelho^0,c
   373  000068                     
   374                           ;main.c: 177: 
   375  000068  0E00               	movlw	0
   376  00006A  6E26               	movwf	main@pontuacao_verde^0,c
   377  00006C                     
   378                           ;main.c: 181:             aux = 0;
   379  00006C  68B4               	setf	180,c	;volatile
   380  00006E                     
   381                           ;main.c: 182:             cursor[(posicao)/3][(posicao)%3] = 0;
   382  00006E  0E18               	movlw	24
   383  000070  6E93               	movwf	147,c	;volatile
   384  000072                     
   385                           ;main.c: 183: 
   386  000072  0E00               	movlw	0
   387  000074  6E95               	movwf	149,c	;volatile
   388  000076                     
   389                           ;main.c: 184:             posicao++;
   390  000076  0E01               	movlw	1
   391  000078  6E81               	movwf	129,c	;volatile
   392  00007A                     
   393                           ;main.c: 185:             while(aux != 1) {
   394  00007A  0E00               	movlw	0
   395  00007C  6E83               	movwf	131,c	;volatile
   396  00007E                     
   397                           ;main.c: 186:                 if((posicao) == 9)
   398  00007E  0E0B               	movlw	11
   399  000080  6ED7               	movwf	215,c	;volatile
   400  000082                     
   401                           ;main.c: 187:                     posicao = 0;
   402  000082  0EA0               	movlw	160
   403  000084  6EF2               	movwf	242,c	;volatile
   404  000086                     l1589:
   405                           
   406                           ;main.c: 190:                 } else {;main.c: 193:                     MOVE_Old = 0;
   407  000086  A681               	btfss	129,3,c	;volatile
   408  000088  EF48  F000         	goto	u1261
   409  00008C  EF4A  F000         	goto	u1260
   410  000090                     u1261:
   411  000090  EF36  F001         	goto	l1619
   412  000094                     u1260:
   413  000094  0423               	decf	main@MOVE_Old^0,w,c
   414  000096  A4D8               	btfss	status,2,c
   415  000098  EF50  F000         	goto	u1271
   416  00009C  EF52  F000         	goto	u1270
   417  0000A0                     u1271:
   418  0000A0  EF36  F001         	goto	l1619
   419  0000A4                     u1270:
   420  0000A4                     
   421                           ;main.c: 194:                 };main.c: 195: 
   422  0000A4  0E00               	movlw	0
   423  0000A6  6E24               	movwf	main@aux^0,c
   424  0000A8                     
   425                           ;main.c: 196: 
   426  0000A8  0E00               	movlw	0
   427  0000AA  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   428  0000AC  0E03               	movlw	3
   429  0000AE  6E0A               	movwf	___awdiv@divisor^0,c
   430  0000B0  5028               	movf	main@posicao^0,w,c
   431  0000B2  6E08               	movwf	___awdiv@dividend^0,c
   432  0000B4  6A09               	clrf	(___awdiv@dividend+1)^0,c
   433  0000B6  BE08               	btfsc	___awdiv@dividend^0,7,c
   434  0000B8  0609               	decf	(___awdiv@dividend+1)^0,f,c
   435  0000BA  ECB2  F008         	call	___awdiv	;wreg free
   436  0000BE  C008  F010         	movff	?___awdiv,___wmul@multiplier
   437  0000C2  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   438  0000C6  0E00               	movlw	0
   439  0000C8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   440  0000CA  0E03               	movlw	3
   441  0000CC  6E12               	movwf	___wmul@multiplicand^0,c
   442  0000CE  ECE0  F009         	call	___wmul	;wreg free
   443  0000D2  0E2F               	movlw	low _cursor
   444  0000D4  6E16               	movwf	??_main^0,c
   445  0000D6  0E00               	movlw	high _cursor
   446  0000D8  6E17               	movwf	(??_main+1)^0,c
   447  0000DA  5010               	movf	?___wmul^0,w,c
   448  0000DC  2616               	addwf	??_main^0,f,c
   449  0000DE  5011               	movf	(?___wmul+1)^0,w,c
   450  0000E0  2217               	addwfc	(??_main+1)^0,f,c
   451  0000E2  5028               	movf	main@posicao^0,w,c
   452  0000E4  6E08               	movwf	___awmod@dividend^0,c
   453  0000E6  6A09               	clrf	(___awmod@dividend+1)^0,c
   454  0000E8  BE08               	btfsc	___awmod@dividend^0,7,c
   455  0000EA  0609               	decf	(___awmod@dividend+1)^0,f,c
   456  0000EC  0E00               	movlw	0
   457  0000EE  6E0B               	movwf	(___awmod@divisor+1)^0,c
   458  0000F0  0E03               	movlw	3
   459  0000F2  6E0A               	movwf	___awmod@divisor^0,c
   460  0000F4  EC14  F009         	call	___awmod	;wreg free
   461  0000F8  5008               	movf	?___awmod^0,w,c
   462  0000FA  2416               	addwf	??_main^0,w,c
   463  0000FC  6ED9               	movwf	fsr2l,c
   464  0000FE  5009               	movf	(?___awmod+1)^0,w,c
   465  000100  2017               	addwfc	(??_main+1)^0,w,c
   466  000102  6EDA               	movwf	fsr2h,c
   467  000104  0E00               	movlw	0
   468  000106  6EDF               	movwf	indf2,c
   469  000108                     l1597:
   470                           
   471                           ;main.c: 198:             cursor[(posicao)/3][(posicao)%3] = 1;
   472  000108  2A28               	incf	main@posicao^0,f,c
   473                           
   474                           ;main.c: 199:             MOVE_Old = 0;
   475  00010A  EFFC  F000         	goto	l1613
   476  00010E                     l1599:
   477                           
   478                           ;main.c: 200:         }
   479  00010E  0E09               	movlw	9
   480  000110  1828               	xorwf	main@posicao^0,w,c
   481  000112  A4D8               	btfss	status,2,c
   482  000114  EF8E  F000         	goto	u1281
   483  000118  EF90  F000         	goto	u1280
   484  00011C                     u1281:
   485  00011C  EF92  F000         	goto	l1603
   486  000120                     u1280:
   487  000120                     
   488                           ;main.c: 201: 
   489  000120  0E00               	movlw	0
   490  000122  6E28               	movwf	main@posicao^0,c
   491  000124                     l1603:
   492                           
   493                           ;main.c: 202:         if(PORTBbits.RB3 == 0 && MOVE_Old == 0)
   494  000124  0E00               	movlw	0
   495  000126  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   496  000128  0E03               	movlw	3
   497  00012A  6E0A               	movwf	___awdiv@divisor^0,c
   498  00012C  5028               	movf	main@posicao^0,w,c
   499  00012E  6E08               	movwf	___awdiv@dividend^0,c
   500  000130  6A09               	clrf	(___awdiv@dividend+1)^0,c
   501  000132  BE08               	btfsc	___awdiv@dividend^0,7,c
   502  000134  0609               	decf	(___awdiv@dividend+1)^0,f,c
   503  000136  ECB2  F008         	call	___awdiv	;wreg free
   504  00013A  C008  F010         	movff	?___awdiv,___wmul@multiplier
   505  00013E  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   506  000142  0E00               	movlw	0
   507  000144  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   508  000146  0E03               	movlw	3
   509  000148  6E12               	movwf	___wmul@multiplicand^0,c
   510  00014A  ECE0  F009         	call	___wmul	;wreg free
   511  00014E  0E19               	movlw	low main@marcados
   512  000150  6E16               	movwf	??_main^0,c
   513  000152  0E00               	movlw	high main@marcados
   514  000154  6E17               	movwf	(??_main+1)^0,c
   515  000156  5010               	movf	?___wmul^0,w,c
   516  000158  2616               	addwf	??_main^0,f,c
   517  00015A  5011               	movf	(?___wmul+1)^0,w,c
   518  00015C  2217               	addwfc	(??_main+1)^0,f,c
   519  00015E  5028               	movf	main@posicao^0,w,c
   520  000160  6E08               	movwf	___awmod@dividend^0,c
   521  000162  6A09               	clrf	(___awmod@dividend+1)^0,c
   522  000164  BE08               	btfsc	___awmod@dividend^0,7,c
   523  000166  0609               	decf	(___awmod@dividend+1)^0,f,c
   524  000168  0E00               	movlw	0
   525  00016A  6E0B               	movwf	(___awmod@divisor+1)^0,c
   526  00016C  0E03               	movlw	3
   527  00016E  6E0A               	movwf	___awmod@divisor^0,c
   528  000170  EC14  F009         	call	___awmod	;wreg free
   529  000174  5008               	movf	?___awmod^0,w,c
   530  000176  2416               	addwf	??_main^0,w,c
   531  000178  6ED9               	movwf	fsr2l,c
   532  00017A  5009               	movf	(?___awmod+1)^0,w,c
   533  00017C  2017               	addwfc	(??_main+1)^0,w,c
   534  00017E  6EDA               	movwf	fsr2h,c
   535  000180  04DE               	decf	postinc2,w,c
   536  000182  A4D8               	btfss	status,2,c
   537  000184  EFC6  F000         	goto	u1291
   538  000188  EFC8  F000         	goto	u1290
   539  00018C                     u1291:
   540  00018C  EFCA  F000         	goto	l1607
   541  000190                     u1290:
   542  000190  EF84  F000         	goto	l1597
   543  000194                     l1607:
   544                           
   545                           ;main.c: 205: 
   546  000194  0E01               	movlw	1
   547  000196  6E24               	movwf	main@aux^0,c
   548  000198                     
   549                           ;main.c: 206:         if(PORTBbits.RB4 == 1 && SEL_Old == 1)
   550  000198  0E00               	movlw	0
   551  00019A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   552  00019C  0E03               	movlw	3
   553  00019E  6E0A               	movwf	___awdiv@divisor^0,c
   554  0001A0  5028               	movf	main@posicao^0,w,c
   555  0001A2  6E08               	movwf	___awdiv@dividend^0,c
   556  0001A4  6A09               	clrf	(___awdiv@dividend+1)^0,c
   557  0001A6  BE08               	btfsc	___awdiv@dividend^0,7,c
   558  0001A8  0609               	decf	(___awdiv@dividend+1)^0,f,c
   559  0001AA  ECB2  F008         	call	___awdiv	;wreg free
   560  0001AE  C008  F010         	movff	?___awdiv,___wmul@multiplier
   561  0001B2  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   562  0001B6  0E00               	movlw	0
   563  0001B8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   564  0001BA  0E03               	movlw	3
   565  0001BC  6E12               	movwf	___wmul@multiplicand^0,c
   566  0001BE  ECE0  F009         	call	___wmul	;wreg free
   567  0001C2  0E2F               	movlw	low _cursor
   568  0001C4  6E16               	movwf	??_main^0,c
   569  0001C6  0E00               	movlw	high _cursor
   570  0001C8  6E17               	movwf	(??_main+1)^0,c
   571  0001CA  5010               	movf	?___wmul^0,w,c
   572  0001CC  2616               	addwf	??_main^0,f,c
   573  0001CE  5011               	movf	(?___wmul+1)^0,w,c
   574  0001D0  2217               	addwfc	(??_main+1)^0,f,c
   575  0001D2  5028               	movf	main@posicao^0,w,c
   576  0001D4  6E08               	movwf	___awmod@dividend^0,c
   577  0001D6  6A09               	clrf	(___awmod@dividend+1)^0,c
   578  0001D8  BE08               	btfsc	___awmod@dividend^0,7,c
   579  0001DA  0609               	decf	(___awmod@dividend+1)^0,f,c
   580  0001DC  0E00               	movlw	0
   581  0001DE  6E0B               	movwf	(___awmod@divisor+1)^0,c
   582  0001E0  0E03               	movlw	3
   583  0001E2  6E0A               	movwf	___awmod@divisor^0,c
   584  0001E4  EC14  F009         	call	___awmod	;wreg free
   585  0001E8  5008               	movf	?___awmod^0,w,c
   586  0001EA  2416               	addwf	??_main^0,w,c
   587  0001EC  6ED9               	movwf	fsr2l,c
   588  0001EE  5009               	movf	(?___awmod+1)^0,w,c
   589  0001F0  2017               	addwfc	(??_main+1)^0,w,c
   590  0001F2  6EDA               	movwf	fsr2h,c
   591  0001F4  0E01               	movlw	1
   592  0001F6  6EDF               	movwf	indf2,c
   593  0001F8                     l1613:
   594                           
   595                           ;main.c: 199:             MOVE_Old = 0;
   596  0001F8  0424               	decf	main@aux^0,w,c
   597  0001FA  A4D8               	btfss	status,2,c
   598  0001FC  EF02  F001         	goto	u1301
   599  000200  EF04  F001         	goto	u1300
   600  000204                     u1301:
   601  000204  EF87  F000         	goto	l1599
   602  000208                     u1300:
   603  000208                     
   604                           ;main.c: 212:                 marcados[(posicao)/3][(posicao)%3] = 1;
   605  000208  0E00               	movlw	0
   606  00020A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   607  00020C  0E03               	movlw	3
   608  00020E  6E0A               	movwf	___awdiv@divisor^0,c
   609  000210  5028               	movf	main@posicao^0,w,c
   610  000212  6E08               	movwf	___awdiv@dividend^0,c
   611  000214  6A09               	clrf	(___awdiv@dividend+1)^0,c
   612  000216  BE08               	btfsc	___awdiv@dividend^0,7,c
   613  000218  0609               	decf	(___awdiv@dividend+1)^0,f,c
   614  00021A  ECB2  F008         	call	___awdiv	;wreg free
   615  00021E  C008  F010         	movff	?___awdiv,___wmul@multiplier
   616  000222  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   617  000226  0E00               	movlw	0
   618  000228  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   619  00022A  0E03               	movlw	3
   620  00022C  6E12               	movwf	___wmul@multiplicand^0,c
   621  00022E  ECE0  F009         	call	___wmul	;wreg free
   622  000232  0E2F               	movlw	low _cursor
   623  000234  6E16               	movwf	??_main^0,c
   624  000236  0E00               	movlw	high _cursor
   625  000238  6E17               	movwf	(??_main+1)^0,c
   626  00023A  5010               	movf	?___wmul^0,w,c
   627  00023C  2616               	addwf	??_main^0,f,c
   628  00023E  5011               	movf	(?___wmul+1)^0,w,c
   629  000240  2217               	addwfc	(??_main+1)^0,f,c
   630  000242  5028               	movf	main@posicao^0,w,c
   631  000244  6E08               	movwf	___awmod@dividend^0,c
   632  000246  6A09               	clrf	(___awmod@dividend+1)^0,c
   633  000248  BE08               	btfsc	___awmod@dividend^0,7,c
   634  00024A  0609               	decf	(___awmod@dividend+1)^0,f,c
   635  00024C  0E00               	movlw	0
   636  00024E  6E0B               	movwf	(___awmod@divisor+1)^0,c
   637  000250  0E03               	movlw	3
   638  000252  6E0A               	movwf	___awmod@divisor^0,c
   639  000254  EC14  F009         	call	___awmod	;wreg free
   640  000258  5008               	movf	?___awmod^0,w,c
   641  00025A  2416               	addwf	??_main^0,w,c
   642  00025C  6ED9               	movwf	fsr2l,c
   643  00025E  5009               	movf	(?___awmod+1)^0,w,c
   644  000260  2017               	addwfc	(??_main+1)^0,w,c
   645  000262  6EDA               	movwf	fsr2h,c
   646  000264  0E01               	movlw	1
   647  000266  6EDF               	movwf	indf2,c
   648  000268                     
   649                           ;main.c: 213:                 cor = 1;
   650  000268  0E00               	movlw	0
   651  00026A  6E23               	movwf	main@MOVE_Old^0,c
   652  00026C                     l1619:
   653                           
   654                           ;main.c: 216: 
   655  00026C  B681               	btfsc	129,3,c	;volatile
   656  00026E  EF3B  F001         	goto	u1311
   657  000272  EF3D  F001         	goto	u1310
   658  000276                     u1311:
   659  000276  EF47  F001         	goto	l1625
   660  00027A                     u1310:
   661  00027A  5023               	movf	main@MOVE_Old^0,w,c
   662  00027C  A4D8               	btfss	status,2,c
   663  00027E  EF43  F001         	goto	u1321
   664  000282  EF45  F001         	goto	u1320
   665  000286                     u1321:
   666  000286  EF47  F001         	goto	l1625
   667  00028A                     u1320:
   668  00028A                     
   669                           ;main.c: 217:             else if(cor == 1 && verde[(posicao)/3][(posicao)%3] == 0 && ve
      +                          rmelho[(posicao)/3][(posicao)%3] == 0 )
   670  00028A  0E01               	movlw	1
   671  00028C  6E23               	movwf	main@MOVE_Old^0,c
   672  00028E                     l1625:
   673                           
   674                           ;main.c: 220:                 marcados[(posicao)/3][(posicao)%3] = 1;
   675  00028E  A881               	btfss	129,4,c	;volatile
   676  000290  EF4C  F001         	goto	u1331
   677  000294  EF4E  F001         	goto	u1330
   678  000298                     u1331:
   679  000298  EFE8  F003         	goto	l1671
   680  00029C                     u1330:
   681  00029C  0422               	decf	main@SEL_Old^0,w,c
   682  00029E  A4D8               	btfss	status,2,c
   683  0002A0  EF54  F001         	goto	u1341
   684  0002A4  EF56  F001         	goto	u1340
   685  0002A8                     u1341:
   686  0002A8  EFE8  F003         	goto	l1671
   687  0002AC                     u1340:
   688  0002AC                     
   689                           ;main.c: 221:                 cor = 0;;main.c: 223: 
   690  0002AC  502C               	movf	_cor^0,w,c
   691  0002AE  A4D8               	btfss	status,2,c
   692  0002B0  EF5C  F001         	goto	u1351
   693  0002B4  EF5E  F001         	goto	u1350
   694  0002B8                     u1351:
   695  0002B8  EF2E  F002         	goto	l1639
   696  0002BC                     u1350:
   697  0002BC  0E00               	movlw	0
   698  0002BE  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   699  0002C0  0E03               	movlw	3
   700  0002C2  6E0A               	movwf	___awdiv@divisor^0,c
   701  0002C4  5028               	movf	main@posicao^0,w,c
   702  0002C6  6E08               	movwf	___awdiv@dividend^0,c
   703  0002C8  6A09               	clrf	(___awdiv@dividend+1)^0,c
   704  0002CA  BE08               	btfsc	___awdiv@dividend^0,7,c
   705  0002CC  0609               	decf	(___awdiv@dividend+1)^0,f,c
   706  0002CE  ECB2  F008         	call	___awdiv	;wreg free
   707  0002D2  C008  F010         	movff	?___awdiv,___wmul@multiplier
   708  0002D6  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   709  0002DA  0E00               	movlw	0
   710  0002DC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   711  0002DE  0E03               	movlw	3
   712  0002E0  6E12               	movwf	___wmul@multiplicand^0,c
   713  0002E2  ECE0  F009         	call	___wmul	;wreg free
   714  0002E6  0E38               	movlw	low _vermelho
   715  0002E8  6E16               	movwf	??_main^0,c
   716  0002EA  0E00               	movlw	high _vermelho
   717  0002EC  6E17               	movwf	(??_main+1)^0,c
   718  0002EE  5010               	movf	?___wmul^0,w,c
   719  0002F0  2616               	addwf	??_main^0,f,c
   720  0002F2  5011               	movf	(?___wmul+1)^0,w,c
   721  0002F4  2217               	addwfc	(??_main+1)^0,f,c
   722  0002F6  5028               	movf	main@posicao^0,w,c
   723  0002F8  6E08               	movwf	___awmod@dividend^0,c
   724  0002FA  6A09               	clrf	(___awmod@dividend+1)^0,c
   725  0002FC  BE08               	btfsc	___awmod@dividend^0,7,c
   726  0002FE  0609               	decf	(___awmod@dividend+1)^0,f,c
   727  000300  0E00               	movlw	0
   728  000302  6E0B               	movwf	(___awmod@divisor+1)^0,c
   729  000304  0E03               	movlw	3
   730  000306  6E0A               	movwf	___awmod@divisor^0,c
   731  000308  EC14  F009         	call	___awmod	;wreg free
   732  00030C  5008               	movf	?___awmod^0,w,c
   733  00030E  2416               	addwf	??_main^0,w,c
   734  000310  6ED9               	movwf	fsr2l,c
   735  000312  5009               	movf	(?___awmod+1)^0,w,c
   736  000314  2017               	addwfc	(??_main+1)^0,w,c
   737  000316  6EDA               	movwf	fsr2h,c
   738  000318  50DF               	movf	indf2,w,c
   739  00031A  A4D8               	btfss	status,2,c
   740  00031C  EF92  F001         	goto	u1361
   741  000320  EF94  F001         	goto	u1360
   742  000324                     u1361:
   743  000324  EF2E  F002         	goto	l1639
   744  000328                     u1360:
   745  000328  0E00               	movlw	0
   746  00032A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   747  00032C  0E03               	movlw	3
   748  00032E  6E0A               	movwf	___awdiv@divisor^0,c
   749  000330  5028               	movf	main@posicao^0,w,c
   750  000332  6E08               	movwf	___awdiv@dividend^0,c
   751  000334  6A09               	clrf	(___awdiv@dividend+1)^0,c
   752  000336  BE08               	btfsc	___awdiv@dividend^0,7,c
   753  000338  0609               	decf	(___awdiv@dividend+1)^0,f,c
   754  00033A  ECB2  F008         	call	___awdiv	;wreg free
   755  00033E  C008  F010         	movff	?___awdiv,___wmul@multiplier
   756  000342  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   757  000346  0E00               	movlw	0
   758  000348  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   759  00034A  0E03               	movlw	3
   760  00034C  6E12               	movwf	___wmul@multiplicand^0,c
   761  00034E  ECE0  F009         	call	___wmul	;wreg free
   762  000352  0E41               	movlw	low _verde
   763  000354  6E16               	movwf	??_main^0,c
   764  000356  0E00               	movlw	high _verde
   765  000358  6E17               	movwf	(??_main+1)^0,c
   766  00035A  5010               	movf	?___wmul^0,w,c
   767  00035C  2616               	addwf	??_main^0,f,c
   768  00035E  5011               	movf	(?___wmul+1)^0,w,c
   769  000360  2217               	addwfc	(??_main+1)^0,f,c
   770  000362  5028               	movf	main@posicao^0,w,c
   771  000364  6E08               	movwf	___awmod@dividend^0,c
   772  000366  6A09               	clrf	(___awmod@dividend+1)^0,c
   773  000368  BE08               	btfsc	___awmod@dividend^0,7,c
   774  00036A  0609               	decf	(___awmod@dividend+1)^0,f,c
   775  00036C  0E00               	movlw	0
   776  00036E  6E0B               	movwf	(___awmod@divisor+1)^0,c
   777  000370  0E03               	movlw	3
   778  000372  6E0A               	movwf	___awmod@divisor^0,c
   779  000374  EC14  F009         	call	___awmod	;wreg free
   780  000378  5008               	movf	?___awmod^0,w,c
   781  00037A  2416               	addwf	??_main^0,w,c
   782  00037C  6ED9               	movwf	fsr2l,c
   783  00037E  5009               	movf	(?___awmod+1)^0,w,c
   784  000380  2017               	addwfc	(??_main+1)^0,w,c
   785  000382  6EDA               	movwf	fsr2h,c
   786  000384  50DF               	movf	indf2,w,c
   787  000386  A4D8               	btfss	status,2,c
   788  000388  EFC8  F001         	goto	u1371
   789  00038C  EFCA  F001         	goto	u1370
   790  000390                     u1371:
   791  000390  EF2E  F002         	goto	l1639
   792  000394                     u1370:
   793  000394                     
   794                           ;main.c: 224:             aux = 0;;main.c: 225:             cursor[(posicao)/3][(posicao
      +                          )%3] = 0;
   795  000394  0E00               	movlw	0
   796  000396  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   797  000398  0E03               	movlw	3
   798  00039A  6E0A               	movwf	___awdiv@divisor^0,c
   799  00039C  5028               	movf	main@posicao^0,w,c
   800  00039E  6E08               	movwf	___awdiv@dividend^0,c
   801  0003A0  6A09               	clrf	(___awdiv@dividend+1)^0,c
   802  0003A2  BE08               	btfsc	___awdiv@dividend^0,7,c
   803  0003A4  0609               	decf	(___awdiv@dividend+1)^0,f,c
   804  0003A6  ECB2  F008         	call	___awdiv	;wreg free
   805  0003AA  C008  F010         	movff	?___awdiv,___wmul@multiplier
   806  0003AE  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   807  0003B2  0E00               	movlw	0
   808  0003B4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   809  0003B6  0E03               	movlw	3
   810  0003B8  6E12               	movwf	___wmul@multiplicand^0,c
   811  0003BA  ECE0  F009         	call	___wmul	;wreg free
   812  0003BE  0E41               	movlw	low _verde
   813  0003C0  6E16               	movwf	??_main^0,c
   814  0003C2  0E00               	movlw	high _verde
   815  0003C4  6E17               	movwf	(??_main+1)^0,c
   816  0003C6  5010               	movf	?___wmul^0,w,c
   817  0003C8  2616               	addwf	??_main^0,f,c
   818  0003CA  5011               	movf	(?___wmul+1)^0,w,c
   819  0003CC  2217               	addwfc	(??_main+1)^0,f,c
   820  0003CE  5028               	movf	main@posicao^0,w,c
   821  0003D0  6E08               	movwf	___awmod@dividend^0,c
   822  0003D2  6A09               	clrf	(___awmod@dividend+1)^0,c
   823  0003D4  BE08               	btfsc	___awmod@dividend^0,7,c
   824  0003D6  0609               	decf	(___awmod@dividend+1)^0,f,c
   825  0003D8  0E00               	movlw	0
   826  0003DA  6E0B               	movwf	(___awmod@divisor+1)^0,c
   827  0003DC  0E03               	movlw	3
   828  0003DE  6E0A               	movwf	___awmod@divisor^0,c
   829  0003E0  EC14  F009         	call	___awmod	;wreg free
   830  0003E4  5008               	movf	?___awmod^0,w,c
   831  0003E6  2416               	addwf	??_main^0,w,c
   832  0003E8  6ED9               	movwf	fsr2l,c
   833  0003EA  5009               	movf	(?___awmod+1)^0,w,c
   834  0003EC  2017               	addwfc	(??_main+1)^0,w,c
   835  0003EE  6EDA               	movwf	fsr2h,c
   836  0003F0  0E01               	movlw	1
   837  0003F2  6EDF               	movwf	indf2,c
   838                           
   839                           ;main.c: 226: 
   840  0003F4  0E00               	movlw	0
   841  0003F6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   842  0003F8  0E03               	movlw	3
   843  0003FA  6E0A               	movwf	___awdiv@divisor^0,c
   844  0003FC  5028               	movf	main@posicao^0,w,c
   845  0003FE  6E08               	movwf	___awdiv@dividend^0,c
   846  000400  6A09               	clrf	(___awdiv@dividend+1)^0,c
   847  000402  BE08               	btfsc	___awdiv@dividend^0,7,c
   848  000404  0609               	decf	(___awdiv@dividend+1)^0,f,c
   849  000406  ECB2  F008         	call	___awdiv	;wreg free
   850  00040A  C008  F010         	movff	?___awdiv,___wmul@multiplier
   851  00040E  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   852  000412  0E00               	movlw	0
   853  000414  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   854  000416  0E03               	movlw	3
   855  000418  6E12               	movwf	___wmul@multiplicand^0,c
   856  00041A  ECE0  F009         	call	___wmul	;wreg free
   857  00041E  0E19               	movlw	low main@marcados
   858  000420  6E16               	movwf	??_main^0,c
   859  000422  0E00               	movlw	high main@marcados
   860  000424  6E17               	movwf	(??_main+1)^0,c
   861  000426  5010               	movf	?___wmul^0,w,c
   862  000428  2616               	addwf	??_main^0,f,c
   863  00042A  5011               	movf	(?___wmul+1)^0,w,c
   864  00042C  2217               	addwfc	(??_main+1)^0,f,c
   865  00042E  5028               	movf	main@posicao^0,w,c
   866  000430  6E08               	movwf	___awmod@dividend^0,c
   867  000432  6A09               	clrf	(___awmod@dividend+1)^0,c
   868  000434  BE08               	btfsc	___awmod@dividend^0,7,c
   869  000436  0609               	decf	(___awmod@dividend+1)^0,f,c
   870  000438  0E00               	movlw	0
   871  00043A  6E0B               	movwf	(___awmod@divisor+1)^0,c
   872  00043C  0E03               	movlw	3
   873  00043E  6E0A               	movwf	___awmod@divisor^0,c
   874  000440  EC14  F009         	call	___awmod	;wreg free
   875  000444  5008               	movf	?___awmod^0,w,c
   876  000446  2416               	addwf	??_main^0,w,c
   877  000448  6ED9               	movwf	fsr2l,c
   878  00044A  5009               	movf	(?___awmod+1)^0,w,c
   879  00044C  2017               	addwfc	(??_main+1)^0,w,c
   880  00044E  6EDA               	movwf	fsr2h,c
   881  000450  0E01               	movlw	1
   882  000452  6EDF               	movwf	indf2,c
   883  000454                     
   884                           ;main.c: 227:             posicao++;
   885  000454  0E01               	movlw	1
   886  000456  6E2C               	movwf	_cor^0,c
   887                           
   888                           ;main.c: 228:             while(aux != 1) {
   889  000458  EF04  F003         	goto	l1649
   890  00045C                     l1639:
   891  00045C  042C               	decf	_cor^0,w,c
   892  00045E  A4D8               	btfss	status,2,c
   893  000460  EF34  F002         	goto	u1381
   894  000464  EF36  F002         	goto	u1380
   895  000468                     u1381:
   896  000468  EF04  F003         	goto	l1649
   897  00046C                     u1380:
   898  00046C  0E00               	movlw	0
   899  00046E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   900  000470  0E03               	movlw	3
   901  000472  6E0A               	movwf	___awdiv@divisor^0,c
   902  000474  5028               	movf	main@posicao^0,w,c
   903  000476  6E08               	movwf	___awdiv@dividend^0,c
   904  000478  6A09               	clrf	(___awdiv@dividend+1)^0,c
   905  00047A  BE08               	btfsc	___awdiv@dividend^0,7,c
   906  00047C  0609               	decf	(___awdiv@dividend+1)^0,f,c
   907  00047E  ECB2  F008         	call	___awdiv	;wreg free
   908  000482  C008  F010         	movff	?___awdiv,___wmul@multiplier
   909  000486  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   910  00048A  0E00               	movlw	0
   911  00048C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   912  00048E  0E03               	movlw	3
   913  000490  6E12               	movwf	___wmul@multiplicand^0,c
   914  000492  ECE0  F009         	call	___wmul	;wreg free
   915  000496  0E41               	movlw	low _verde
   916  000498  6E16               	movwf	??_main^0,c
   917  00049A  0E00               	movlw	high _verde
   918  00049C  6E17               	movwf	(??_main+1)^0,c
   919  00049E  5010               	movf	?___wmul^0,w,c
   920  0004A0  2616               	addwf	??_main^0,f,c
   921  0004A2  5011               	movf	(?___wmul+1)^0,w,c
   922  0004A4  2217               	addwfc	(??_main+1)^0,f,c
   923  0004A6  5028               	movf	main@posicao^0,w,c
   924  0004A8  6E08               	movwf	___awmod@dividend^0,c
   925  0004AA  6A09               	clrf	(___awmod@dividend+1)^0,c
   926  0004AC  BE08               	btfsc	___awmod@dividend^0,7,c
   927  0004AE  0609               	decf	(___awmod@dividend+1)^0,f,c
   928  0004B0  0E00               	movlw	0
   929  0004B2  6E0B               	movwf	(___awmod@divisor+1)^0,c
   930  0004B4  0E03               	movlw	3
   931  0004B6  6E0A               	movwf	___awmod@divisor^0,c
   932  0004B8  EC14  F009         	call	___awmod	;wreg free
   933  0004BC  5008               	movf	?___awmod^0,w,c
   934  0004BE  2416               	addwf	??_main^0,w,c
   935  0004C0  6ED9               	movwf	fsr2l,c
   936  0004C2  5009               	movf	(?___awmod+1)^0,w,c
   937  0004C4  2017               	addwfc	(??_main+1)^0,w,c
   938  0004C6  6EDA               	movwf	fsr2h,c
   939  0004C8  50DF               	movf	indf2,w,c
   940  0004CA  A4D8               	btfss	status,2,c
   941  0004CC  EF6A  F002         	goto	u1391
   942  0004D0  EF6C  F002         	goto	u1390
   943  0004D4                     u1391:
   944  0004D4  EF04  F003         	goto	l1649
   945  0004D8                     u1390:
   946  0004D8  0E00               	movlw	0
   947  0004DA  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   948  0004DC  0E03               	movlw	3
   949  0004DE  6E0A               	movwf	___awdiv@divisor^0,c
   950  0004E0  5028               	movf	main@posicao^0,w,c
   951  0004E2  6E08               	movwf	___awdiv@dividend^0,c
   952  0004E4  6A09               	clrf	(___awdiv@dividend+1)^0,c
   953  0004E6  BE08               	btfsc	___awdiv@dividend^0,7,c
   954  0004E8  0609               	decf	(___awdiv@dividend+1)^0,f,c
   955  0004EA  ECB2  F008         	call	___awdiv	;wreg free
   956  0004EE  C008  F010         	movff	?___awdiv,___wmul@multiplier
   957  0004F2  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
   958  0004F6  0E00               	movlw	0
   959  0004F8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
   960  0004FA  0E03               	movlw	3
   961  0004FC  6E12               	movwf	___wmul@multiplicand^0,c
   962  0004FE  ECE0  F009         	call	___wmul	;wreg free
   963  000502  0E38               	movlw	low _vermelho
   964  000504  6E16               	movwf	??_main^0,c
   965  000506  0E00               	movlw	high _vermelho
   966  000508  6E17               	movwf	(??_main+1)^0,c
   967  00050A  5010               	movf	?___wmul^0,w,c
   968  00050C  2616               	addwf	??_main^0,f,c
   969  00050E  5011               	movf	(?___wmul+1)^0,w,c
   970  000510  2217               	addwfc	(??_main+1)^0,f,c
   971  000512  5028               	movf	main@posicao^0,w,c
   972  000514  6E08               	movwf	___awmod@dividend^0,c
   973  000516  6A09               	clrf	(___awmod@dividend+1)^0,c
   974  000518  BE08               	btfsc	___awmod@dividend^0,7,c
   975  00051A  0609               	decf	(___awmod@dividend+1)^0,f,c
   976  00051C  0E00               	movlw	0
   977  00051E  6E0B               	movwf	(___awmod@divisor+1)^0,c
   978  000520  0E03               	movlw	3
   979  000522  6E0A               	movwf	___awmod@divisor^0,c
   980  000524  EC14  F009         	call	___awmod	;wreg free
   981  000528  5008               	movf	?___awmod^0,w,c
   982  00052A  2416               	addwf	??_main^0,w,c
   983  00052C  6ED9               	movwf	fsr2l,c
   984  00052E  5009               	movf	(?___awmod+1)^0,w,c
   985  000530  2017               	addwfc	(??_main+1)^0,w,c
   986  000532  6EDA               	movwf	fsr2h,c
   987  000534  50DF               	movf	indf2,w,c
   988  000536  A4D8               	btfss	status,2,c
   989  000538  EFA0  F002         	goto	u1401
   990  00053C  EFA2  F002         	goto	u1400
   991  000540                     u1401:
   992  000540  EF04  F003         	goto	l1649
   993  000544                     u1400:
   994  000544                     
   995                           ;main.c: 232:                     posicao++;;main.c: 233:                 } else {
   996  000544  0E00               	movlw	0
   997  000546  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   998  000548  0E03               	movlw	3
   999  00054A  6E0A               	movwf	___awdiv@divisor^0,c
  1000  00054C  5028               	movf	main@posicao^0,w,c
  1001  00054E  6E08               	movwf	___awdiv@dividend^0,c
  1002  000550  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1003  000552  BE08               	btfsc	___awdiv@dividend^0,7,c
  1004  000554  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1005  000556  ECB2  F008         	call	___awdiv	;wreg free
  1006  00055A  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1007  00055E  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1008  000562  0E00               	movlw	0
  1009  000564  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1010  000566  0E03               	movlw	3
  1011  000568  6E12               	movwf	___wmul@multiplicand^0,c
  1012  00056A  ECE0  F009         	call	___wmul	;wreg free
  1013  00056E  0E38               	movlw	low _vermelho
  1014  000570  6E16               	movwf	??_main^0,c
  1015  000572  0E00               	movlw	high _vermelho
  1016  000574  6E17               	movwf	(??_main+1)^0,c
  1017  000576  5010               	movf	?___wmul^0,w,c
  1018  000578  2616               	addwf	??_main^0,f,c
  1019  00057A  5011               	movf	(?___wmul+1)^0,w,c
  1020  00057C  2217               	addwfc	(??_main+1)^0,f,c
  1021  00057E  5028               	movf	main@posicao^0,w,c
  1022  000580  6E08               	movwf	___awmod@dividend^0,c
  1023  000582  6A09               	clrf	(___awmod@dividend+1)^0,c
  1024  000584  BE08               	btfsc	___awmod@dividend^0,7,c
  1025  000586  0609               	decf	(___awmod@dividend+1)^0,f,c
  1026  000588  0E00               	movlw	0
  1027  00058A  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1028  00058C  0E03               	movlw	3
  1029  00058E  6E0A               	movwf	___awmod@divisor^0,c
  1030  000590  EC14  F009         	call	___awmod	;wreg free
  1031  000594  5008               	movf	?___awmod^0,w,c
  1032  000596  2416               	addwf	??_main^0,w,c
  1033  000598  6ED9               	movwf	fsr2l,c
  1034  00059A  5009               	movf	(?___awmod+1)^0,w,c
  1035  00059C  2017               	addwfc	(??_main+1)^0,w,c
  1036  00059E  6EDA               	movwf	fsr2h,c
  1037  0005A0  0E01               	movlw	1
  1038  0005A2  6EDF               	movwf	indf2,c
  1039                           
  1040                           ;main.c: 234:                     aux = 1;
  1041  0005A4  0E00               	movlw	0
  1042  0005A6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1043  0005A8  0E03               	movlw	3
  1044  0005AA  6E0A               	movwf	___awdiv@divisor^0,c
  1045  0005AC  5028               	movf	main@posicao^0,w,c
  1046  0005AE  6E08               	movwf	___awdiv@dividend^0,c
  1047  0005B0  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1048  0005B2  BE08               	btfsc	___awdiv@dividend^0,7,c
  1049  0005B4  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1050  0005B6  ECB2  F008         	call	___awdiv	;wreg free
  1051  0005BA  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1052  0005BE  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1053  0005C2  0E00               	movlw	0
  1054  0005C4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1055  0005C6  0E03               	movlw	3
  1056  0005C8  6E12               	movwf	___wmul@multiplicand^0,c
  1057  0005CA  ECE0  F009         	call	___wmul	;wreg free
  1058  0005CE  0E19               	movlw	low main@marcados
  1059  0005D0  6E16               	movwf	??_main^0,c
  1060  0005D2  0E00               	movlw	high main@marcados
  1061  0005D4  6E17               	movwf	(??_main+1)^0,c
  1062  0005D6  5010               	movf	?___wmul^0,w,c
  1063  0005D8  2616               	addwf	??_main^0,f,c
  1064  0005DA  5011               	movf	(?___wmul+1)^0,w,c
  1065  0005DC  2217               	addwfc	(??_main+1)^0,f,c
  1066  0005DE  5028               	movf	main@posicao^0,w,c
  1067  0005E0  6E08               	movwf	___awmod@dividend^0,c
  1068  0005E2  6A09               	clrf	(___awmod@dividend+1)^0,c
  1069  0005E4  BE08               	btfsc	___awmod@dividend^0,7,c
  1070  0005E6  0609               	decf	(___awmod@dividend+1)^0,f,c
  1071  0005E8  0E00               	movlw	0
  1072  0005EA  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1073  0005EC  0E03               	movlw	3
  1074  0005EE  6E0A               	movwf	___awmod@divisor^0,c
  1075  0005F0  EC14  F009         	call	___awmod	;wreg free
  1076  0005F4  5008               	movf	?___awmod^0,w,c
  1077  0005F6  2416               	addwf	??_main^0,w,c
  1078  0005F8  6ED9               	movwf	fsr2l,c
  1079  0005FA  5009               	movf	(?___awmod+1)^0,w,c
  1080  0005FC  2017               	addwfc	(??_main+1)^0,w,c
  1081  0005FE  6EDA               	movwf	fsr2h,c
  1082  000600  0E01               	movlw	1
  1083  000602  6EDF               	movwf	indf2,c
  1084  000604                     
  1085                           ;main.c: 235:                     cursor[(posicao)/3][(posicao)%3] = 1;
  1086  000604  0E00               	movlw	0
  1087  000606  6E2C               	movwf	_cor^0,c
  1088  000608                     l1649:
  1089                           
  1090                           ;main.c: 238: 
  1091  000608  0E00               	movlw	0
  1092  00060A  6E24               	movwf	main@aux^0,c
  1093                           
  1094                           ;main.c: 239:             }
  1095  00060C  0E00               	movlw	0
  1096  00060E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1097  000610  0E03               	movlw	3
  1098  000612  6E0A               	movwf	___awdiv@divisor^0,c
  1099  000614  5028               	movf	main@posicao^0,w,c
  1100  000616  6E08               	movwf	___awdiv@dividend^0,c
  1101  000618  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1102  00061A  BE08               	btfsc	___awdiv@dividend^0,7,c
  1103  00061C  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1104  00061E  ECB2  F008         	call	___awdiv	;wreg free
  1105  000622  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1106  000626  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1107  00062A  0E00               	movlw	0
  1108  00062C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1109  00062E  0E03               	movlw	3
  1110  000630  6E12               	movwf	___wmul@multiplicand^0,c
  1111  000632  ECE0  F009         	call	___wmul	;wreg free
  1112  000636  0E2F               	movlw	low _cursor
  1113  000638  6E16               	movwf	??_main^0,c
  1114  00063A  0E00               	movlw	high _cursor
  1115  00063C  6E17               	movwf	(??_main+1)^0,c
  1116  00063E  5010               	movf	?___wmul^0,w,c
  1117  000640  2616               	addwf	??_main^0,f,c
  1118  000642  5011               	movf	(?___wmul+1)^0,w,c
  1119  000644  2217               	addwfc	(??_main+1)^0,f,c
  1120  000646  5028               	movf	main@posicao^0,w,c
  1121  000648  6E08               	movwf	___awmod@dividend^0,c
  1122  00064A  6A09               	clrf	(___awmod@dividend+1)^0,c
  1123  00064C  BE08               	btfsc	___awmod@dividend^0,7,c
  1124  00064E  0609               	decf	(___awmod@dividend+1)^0,f,c
  1125  000650  0E00               	movlw	0
  1126  000652  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1127  000654  0E03               	movlw	3
  1128  000656  6E0A               	movwf	___awmod@divisor^0,c
  1129  000658  EC14  F009         	call	___awmod	;wreg free
  1130  00065C  5008               	movf	?___awmod^0,w,c
  1131  00065E  2416               	addwf	??_main^0,w,c
  1132  000660  6ED9               	movwf	fsr2l,c
  1133  000662  5009               	movf	(?___awmod+1)^0,w,c
  1134  000664  2017               	addwfc	(??_main+1)^0,w,c
  1135  000666  6EDA               	movwf	fsr2h,c
  1136  000668  0E00               	movlw	0
  1137  00066A  6EDF               	movwf	indf2,c
  1138  00066C                     l1651:
  1139                           
  1140                           ;main.c: 241:             SEL_Old = 0;
  1141  00066C  2A28               	incf	main@posicao^0,f,c
  1142                           
  1143                           ;main.c: 242:         }
  1144  00066E  EFAE  F003         	goto	l1665
  1145  000672                     l1653:
  1146                           
  1147                           ;main.c: 243: 
  1148  000672  0E09               	movlw	9
  1149  000674  1828               	xorwf	main@posicao^0,w,c
  1150  000676  A4D8               	btfss	status,2,c
  1151  000678  EF40  F003         	goto	u1411
  1152  00067C  EF42  F003         	goto	u1410
  1153  000680                     u1411:
  1154  000680  EF44  F003         	goto	l1657
  1155  000684                     u1410:
  1156  000684                     
  1157                           ;main.c: 244:         if(PORTBbits.RB4 == 0 && SEL_Old == 0)
  1158  000684  0E00               	movlw	0
  1159  000686  6E28               	movwf	main@posicao^0,c
  1160  000688                     l1657:
  1161                           
  1162                           ;main.c: 245:             SEL_Old = 1;
  1163  000688  0E00               	movlw	0
  1164  00068A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1165  00068C  0E03               	movlw	3
  1166  00068E  6E0A               	movwf	___awdiv@divisor^0,c
  1167  000690  5028               	movf	main@posicao^0,w,c
  1168  000692  6E08               	movwf	___awdiv@dividend^0,c
  1169  000694  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1170  000696  BE08               	btfsc	___awdiv@dividend^0,7,c
  1171  000698  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1172  00069A  ECB2  F008         	call	___awdiv	;wreg free
  1173  00069E  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1174  0006A2  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1175  0006A6  0E00               	movlw	0
  1176  0006A8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1177  0006AA  0E03               	movlw	3
  1178  0006AC  6E12               	movwf	___wmul@multiplicand^0,c
  1179  0006AE  ECE0  F009         	call	___wmul	;wreg free
  1180  0006B2  0E19               	movlw	low main@marcados
  1181  0006B4  6E16               	movwf	??_main^0,c
  1182  0006B6  0E00               	movlw	high main@marcados
  1183  0006B8  6E17               	movwf	(??_main+1)^0,c
  1184  0006BA  5010               	movf	?___wmul^0,w,c
  1185  0006BC  2616               	addwf	??_main^0,f,c
  1186  0006BE  5011               	movf	(?___wmul+1)^0,w,c
  1187  0006C0  2217               	addwfc	(??_main+1)^0,f,c
  1188  0006C2  5028               	movf	main@posicao^0,w,c
  1189  0006C4  6E08               	movwf	___awmod@dividend^0,c
  1190  0006C6  6A09               	clrf	(___awmod@dividend+1)^0,c
  1191  0006C8  BE08               	btfsc	___awmod@dividend^0,7,c
  1192  0006CA  0609               	decf	(___awmod@dividend+1)^0,f,c
  1193  0006CC  0E00               	movlw	0
  1194  0006CE  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1195  0006D0  0E03               	movlw	3
  1196  0006D2  6E0A               	movwf	___awmod@divisor^0,c
  1197  0006D4  EC14  F009         	call	___awmod	;wreg free
  1198  0006D8  5008               	movf	?___awmod^0,w,c
  1199  0006DA  2416               	addwf	??_main^0,w,c
  1200  0006DC  6ED9               	movwf	fsr2l,c
  1201  0006DE  5009               	movf	(?___awmod+1)^0,w,c
  1202  0006E0  2017               	addwfc	(??_main+1)^0,w,c
  1203  0006E2  6EDA               	movwf	fsr2h,c
  1204  0006E4  04DE               	decf	postinc2,w,c
  1205  0006E6  A4D8               	btfss	status,2,c
  1206  0006E8  EF78  F003         	goto	u1421
  1207  0006EC  EF7A  F003         	goto	u1420
  1208  0006F0                     u1421:
  1209  0006F0  EF7C  F003         	goto	l1661
  1210  0006F4                     u1420:
  1211  0006F4  EF36  F003         	goto	l1651
  1212  0006F8                     l1661:
  1213                           
  1214                           ;main.c: 248:         {
  1215  0006F8  0E01               	movlw	1
  1216  0006FA  6E24               	movwf	main@aux^0,c
  1217  0006FC                     
  1218                           ;main.c: 249:             limpa_matriz(vermelho);
  1219  0006FC  0E00               	movlw	0
  1220  0006FE  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1221  000700  0E03               	movlw	3
  1222  000702  6E0A               	movwf	___awdiv@divisor^0,c
  1223  000704  5028               	movf	main@posicao^0,w,c
  1224  000706  6E08               	movwf	___awdiv@dividend^0,c
  1225  000708  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1226  00070A  BE08               	btfsc	___awdiv@dividend^0,7,c
  1227  00070C  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1228  00070E  ECB2  F008         	call	___awdiv	;wreg free
  1229  000712  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1230  000716  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1231  00071A  0E00               	movlw	0
  1232  00071C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1233  00071E  0E03               	movlw	3
  1234  000720  6E12               	movwf	___wmul@multiplicand^0,c
  1235  000722  ECE0  F009         	call	___wmul	;wreg free
  1236  000726  0E2F               	movlw	low _cursor
  1237  000728  6E16               	movwf	??_main^0,c
  1238  00072A  0E00               	movlw	high _cursor
  1239  00072C  6E17               	movwf	(??_main+1)^0,c
  1240  00072E  5010               	movf	?___wmul^0,w,c
  1241  000730  2616               	addwf	??_main^0,f,c
  1242  000732  5011               	movf	(?___wmul+1)^0,w,c
  1243  000734  2217               	addwfc	(??_main+1)^0,f,c
  1244  000736  5028               	movf	main@posicao^0,w,c
  1245  000738  6E08               	movwf	___awmod@dividend^0,c
  1246  00073A  6A09               	clrf	(___awmod@dividend+1)^0,c
  1247  00073C  BE08               	btfsc	___awmod@dividend^0,7,c
  1248  00073E  0609               	decf	(___awmod@dividend+1)^0,f,c
  1249  000740  0E00               	movlw	0
  1250  000742  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1251  000744  0E03               	movlw	3
  1252  000746  6E0A               	movwf	___awmod@divisor^0,c
  1253  000748  EC14  F009         	call	___awmod	;wreg free
  1254  00074C  5008               	movf	?___awmod^0,w,c
  1255  00074E  2416               	addwf	??_main^0,w,c
  1256  000750  6ED9               	movwf	fsr2l,c
  1257  000752  5009               	movf	(?___awmod+1)^0,w,c
  1258  000754  2017               	addwfc	(??_main+1)^0,w,c
  1259  000756  6EDA               	movwf	fsr2h,c
  1260  000758  0E01               	movlw	1
  1261  00075A  6EDF               	movwf	indf2,c
  1262  00075C                     l1665:
  1263                           
  1264                           ;main.c: 242:         }
  1265  00075C  0424               	decf	main@aux^0,w,c
  1266  00075E  A4D8               	btfss	status,2,c
  1267  000760  EFB4  F003         	goto	u1431
  1268  000764  EFB6  F003         	goto	u1430
  1269  000768                     u1431:
  1270  000768  EF39  F003         	goto	l1653
  1271  00076C                     u1430:
  1272  00076C                     
  1273                           ;main.c: 254:             cor = 0;
  1274  00076C  0E00               	movlw	0
  1275  00076E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1276  000770  0E03               	movlw	3
  1277  000772  6E0A               	movwf	___awdiv@divisor^0,c
  1278  000774  5028               	movf	main@posicao^0,w,c
  1279  000776  6E08               	movwf	___awdiv@dividend^0,c
  1280  000778  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1281  00077A  BE08               	btfsc	___awdiv@dividend^0,7,c
  1282  00077C  0609               	decf	(___awdiv@dividend+1)^0,f,c
  1283  00077E  ECB2  F008         	call	___awdiv	;wreg free
  1284  000782  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1285  000786  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1286  00078A  0E00               	movlw	0
  1287  00078C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1288  00078E  0E03               	movlw	3
  1289  000790  6E12               	movwf	___wmul@multiplicand^0,c
  1290  000792  ECE0  F009         	call	___wmul	;wreg free
  1291  000796  0E2F               	movlw	low _cursor
  1292  000798  6E16               	movwf	??_main^0,c
  1293  00079A  0E00               	movlw	high _cursor
  1294  00079C  6E17               	movwf	(??_main+1)^0,c
  1295  00079E  5010               	movf	?___wmul^0,w,c
  1296  0007A0  2616               	addwf	??_main^0,f,c
  1297  0007A2  5011               	movf	(?___wmul+1)^0,w,c
  1298  0007A4  2217               	addwfc	(??_main+1)^0,f,c
  1299  0007A6  5028               	movf	main@posicao^0,w,c
  1300  0007A8  6E08               	movwf	___awmod@dividend^0,c
  1301  0007AA  6A09               	clrf	(___awmod@dividend+1)^0,c
  1302  0007AC  BE08               	btfsc	___awmod@dividend^0,7,c
  1303  0007AE  0609               	decf	(___awmod@dividend+1)^0,f,c
  1304  0007B0  0E00               	movlw	0
  1305  0007B2  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1306  0007B4  0E03               	movlw	3
  1307  0007B6  6E0A               	movwf	___awmod@divisor^0,c
  1308  0007B8  EC14  F009         	call	___awmod	;wreg free
  1309  0007BC  5008               	movf	?___awmod^0,w,c
  1310  0007BE  2416               	addwf	??_main^0,w,c
  1311  0007C0  6ED9               	movwf	fsr2l,c
  1312  0007C2  5009               	movf	(?___awmod+1)^0,w,c
  1313  0007C4  2017               	addwfc	(??_main+1)^0,w,c
  1314  0007C6  6EDA               	movwf	fsr2h,c
  1315  0007C8  0E01               	movlw	1
  1316  0007CA  6EDF               	movwf	indf2,c
  1317  0007CC                     
  1318                           ;main.c: 255: 
  1319  0007CC  0E00               	movlw	0
  1320  0007CE  6E22               	movwf	main@SEL_Old^0,c
  1321  0007D0                     l1671:
  1322                           
  1323                           ;main.c: 258:                 verde[i/3][i%3] = 1;
  1324  0007D0  B881               	btfsc	129,4,c	;volatile
  1325  0007D2  EFED  F003         	goto	u1441
  1326  0007D6  EFEF  F003         	goto	u1440
  1327  0007DA                     u1441:
  1328  0007DA  EFF9  F003         	goto	l1677
  1329  0007DE                     u1440:
  1330  0007DE  5022               	movf	main@SEL_Old^0,w,c
  1331  0007E0  A4D8               	btfss	status,2,c
  1332  0007E2  EFF5  F003         	goto	u1451
  1333  0007E6  EFF7  F003         	goto	u1450
  1334  0007EA                     u1451:
  1335  0007EA  EFF9  F003         	goto	l1677
  1336  0007EE                     u1450:
  1337  0007EE                     
  1338                           ;main.c: 259:                 _delay((unsigned long)((200)*(16000000/4000.0)));
  1339  0007EE  0E01               	movlw	1
  1340  0007F0  6E22               	movwf	main@SEL_Old^0,c
  1341  0007F2                     l1677:
  1342                           
  1343                           ;main.c: 261:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1344  0007F2  0E41               	movlw	low _verde
  1345  0007F4  6E08               	movwf	testa_ganhou@teste^0,c
  1346  0007F6  0E00               	movlw	high _verde
  1347  0007F8  6E09               	movwf	(testa_ganhou@teste+1)^0,c
  1348  0007FA  EC17  F006         	call	_testa_ganhou	;wreg free
  1349  0007FE  0900               	iorlw	0
  1350  000800  B4D8               	btfsc	status,2,c
  1351  000802  EF05  F004         	goto	u1461
  1352  000806  EF07  F004         	goto	u1460
  1353  00080A                     u1461:
  1354  00080A  EFE7  F004         	goto	l1727
  1355  00080E                     u1460:
  1356  00080E                     
  1357                           ;main.c: 262: ;main.c: 263:             if(pontuacao_verde == 9)
  1358  00080E  0E38               	movlw	low _vermelho
  1359  000810  6E08               	movwf	limpa_matriz@matriz^0,c
  1360  000812  0E00               	movlw	high _vermelho
  1361  000814  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1362  000816  ECB7  F009         	call	_limpa_matriz	;wreg free
  1363                           
  1364                           ;main.c: 264:             {
  1365  00081A  0E41               	movlw	low _verde
  1366  00081C  6E08               	movwf	limpa_matriz@matriz^0,c
  1367  00081E  0E00               	movlw	high _verde
  1368  000820  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1369  000822  ECB7  F009         	call	_limpa_matriz	;wreg free
  1370                           
  1371                           ;main.c: 265:                 for(i = pontuacao_verde+1; i > 0; i--)
  1372  000826  0E2F               	movlw	low _cursor
  1373  000828  6E08               	movwf	limpa_matriz@matriz^0,c
  1374  00082A  0E00               	movlw	high _cursor
  1375  00082C  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1376  00082E  ECB7  F009         	call	_limpa_matriz	;wreg free
  1377                           
  1378                           ;main.c: 266:                 {
  1379  000832  0E19               	movlw	low main@marcados
  1380  000834  6E08               	movwf	limpa_matriz@matriz^0,c
  1381  000836  0E00               	movlw	high main@marcados
  1382  000838  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1383  00083A  ECB7  F009         	call	_limpa_matriz	;wreg free
  1384  00083E                     
  1385                           ;main.c: 267:                     verde[(i-1)/3][(i-1)%3] = 0;
  1386  00083E  2A26               	incf	main@pontuacao_verde^0,f,c
  1387  000840                     
  1388                           ;main.c: 268:                     _delay((unsigned long)((100)*(16000000/4000.0)));
  1389  000840  0E00               	movlw	0
  1390  000842  6E2C               	movwf	_cor^0,c
  1391  000844                     
  1392                           ;main.c: 270:                 pontuacao_vermelho = 0;
  1393  000844  0E00               	movlw	0
  1394  000846  6E27               	movwf	main@i^0,c
  1395  000848  EF5F  F004         	goto	l1693
  1396  00084C                     l1687:
  1397                           
  1398                           ;main.c: 271:                 pontuacao_verde = 0;;main.c: 272:             }
  1399  00084C  0E00               	movlw	0
  1400  00084E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1401  000850  0E03               	movlw	3
  1402  000852  6E0A               	movwf	___awdiv@divisor^0,c
  1403  000854  C027  F008         	movff	main@i,___awdiv@dividend
  1404  000858  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1405  00085A  ECB2  F008         	call	___awdiv	;wreg free
  1406  00085E  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1407  000862  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1408  000866  0E00               	movlw	0
  1409  000868  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1410  00086A  0E03               	movlw	3
  1411  00086C  6E12               	movwf	___wmul@multiplicand^0,c
  1412  00086E  ECE0  F009         	call	___wmul	;wreg free
  1413  000872  0E41               	movlw	low _verde
  1414  000874  6E16               	movwf	??_main^0,c
  1415  000876  0E00               	movlw	high _verde
  1416  000878  6E17               	movwf	(??_main+1)^0,c
  1417  00087A  5010               	movf	?___wmul^0,w,c
  1418  00087C  2616               	addwf	??_main^0,f,c
  1419  00087E  5011               	movf	(?___wmul+1)^0,w,c
  1420  000880  2217               	addwfc	(??_main+1)^0,f,c
  1421  000882  C027  F008         	movff	main@i,___awmod@dividend
  1422  000886  6A09               	clrf	(___awmod@dividend+1)^0,c
  1423  000888  0E00               	movlw	0
  1424  00088A  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1425  00088C  0E03               	movlw	3
  1426  00088E  6E0A               	movwf	___awmod@divisor^0,c
  1427  000890  EC14  F009         	call	___awmod	;wreg free
  1428  000894  5008               	movf	?___awmod^0,w,c
  1429  000896  2416               	addwf	??_main^0,w,c
  1430  000898  6ED9               	movwf	fsr2l,c
  1431  00089A  5009               	movf	(?___awmod+1)^0,w,c
  1432  00089C  2017               	addwfc	(??_main+1)^0,w,c
  1433  00089E  6EDA               	movwf	fsr2h,c
  1434  0008A0  0E01               	movlw	1
  1435  0008A2  6EDF               	movwf	indf2,c
  1436  0008A4                     
  1437                           ;main.c: 273:             _delay((unsigned long)((500)*(16000000/4000.0)));
  1438  0008A4  0E05               	movlw	5
  1439  0008A6  6E17               	movwf	(??_main+1)^0,c
  1440  0008A8  0E0F               	movlw	15
  1441  0008AA  6E16               	movwf	??_main^0,c
  1442  0008AC  0EF1               	movlw	241
  1443  0008AE                     u1557:
  1444  0008AE  2EE8               	decfsz	wreg,f,c
  1445  0008B0  D7FE               	bra	u1557
  1446  0008B2  2E16               	decfsz	??_main^0,f,c
  1447  0008B4  D7FC               	bra	u1557
  1448  0008B6  2E17               	decfsz	(??_main+1)^0,f,c
  1449  0008B8  D7FA               	bra	u1557
  1450  0008BA  F000               	nop	
  1451  0008BC                     
  1452                           ;main.c: 274: 
  1453  0008BC  2A27               	incf	main@i^0,f,c
  1454  0008BE                     l1693:
  1455  0008BE  5026               	movf	main@pontuacao_verde^0,w,c
  1456  0008C0  5C27               	subwf	main@i^0,w,c
  1457  0008C2  A0D8               	btfss	status,0,c
  1458  0008C4  EF66  F004         	goto	u1471
  1459  0008C8  EF68  F004         	goto	u1470
  1460  0008CC                     u1471:
  1461  0008CC  EF26  F004         	goto	l1687
  1462  0008D0                     u1470:
  1463  0008D0                     
  1464                           ;main.c: 275:             limpa_matriz(verde);
  1465  0008D0  0E15               	movlw	21
  1466  0008D2  6E17               	movwf	(??_main+1)^0,c
  1467  0008D4  0E4B               	movlw	75
  1468  0008D6  6E16               	movwf	??_main^0,c
  1469  0008D8  0EBE               	movlw	190
  1470  0008DA                     u1567:
  1471  0008DA  2EE8               	decfsz	wreg,f,c
  1472  0008DC  D7FE               	bra	u1567
  1473  0008DE  2E16               	decfsz	??_main^0,f,c
  1474  0008E0  D7FC               	bra	u1567
  1475  0008E2  2E17               	decfsz	(??_main+1)^0,f,c
  1476  0008E4  D7FA               	bra	u1567
  1477  0008E6  D000               	nop2	
  1478  0008E8                     
  1479                           ;main.c: 277:             posicao = 0;
  1480  0008E8  0E09               	movlw	9
  1481  0008EA  1826               	xorwf	main@pontuacao_verde^0,w,c
  1482  0008EC  A4D8               	btfss	status,2,c
  1483  0008EE  EF7B  F004         	goto	u1481
  1484  0008F2  EF7D  F004         	goto	u1480
  1485  0008F6                     u1481:
  1486  0008F6  EFCE  F004         	goto	l1715
  1487  0008FA                     u1480:
  1488  0008FA                     
  1489                           ;main.c: 278:             cursor[0][0] = 1;;main.c: 279:             cor = 1;
  1490  0008FA  2826               	incf	main@pontuacao_verde^0,w,c
  1491  0008FC  6E27               	movwf	main@i^0,c
  1492  0008FE                     l1701:
  1493  0008FE  5027               	movf	main@i^0,w,c
  1494  000900  A4D8               	btfss	status,2,c
  1495  000902  EF85  F004         	goto	u1491
  1496  000906  EF87  F004         	goto	u1490
  1497  00090A                     u1491:
  1498  00090A  EF89  F004         	goto	l1705
  1499  00090E                     u1490:
  1500  00090E  EFCA  F004         	goto	l1713
  1501  000912                     l1705:
  1502                           
  1503                           ;main.c: 280:         };main.c: 281: 
  1504  000912  0E00               	movlw	0
  1505  000914  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1506  000916  0E03               	movlw	3
  1507  000918  6E0A               	movwf	___awdiv@divisor^0,c
  1508  00091A  0EFF               	movlw	255
  1509  00091C  2427               	addwf	main@i^0,w,c
  1510  00091E  6E08               	movwf	___awdiv@dividend^0,c
  1511  000920  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1512  000922  0EFF               	movlw	255
  1513  000924  2209               	addwfc	(___awdiv@dividend+1)^0,f,c
  1514  000926  ECB2  F008         	call	___awdiv	;wreg free
  1515  00092A  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1516  00092E  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1517  000932  0E00               	movlw	0
  1518  000934  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1519  000936  0E03               	movlw	3
  1520  000938  6E12               	movwf	___wmul@multiplicand^0,c
  1521  00093A  ECE0  F009         	call	___wmul	;wreg free
  1522  00093E  0E41               	movlw	low _verde
  1523  000940  6E16               	movwf	??_main^0,c
  1524  000942  0E00               	movlw	high _verde
  1525  000944  6E17               	movwf	(??_main+1)^0,c
  1526  000946  5010               	movf	?___wmul^0,w,c
  1527  000948  2616               	addwf	??_main^0,f,c
  1528  00094A  5011               	movf	(?___wmul+1)^0,w,c
  1529  00094C  2217               	addwfc	(??_main+1)^0,f,c
  1530  00094E  0EFF               	movlw	255
  1531  000950  2427               	addwf	main@i^0,w,c
  1532  000952  6E08               	movwf	___awmod@dividend^0,c
  1533  000954  6A09               	clrf	(___awmod@dividend+1)^0,c
  1534  000956  0EFF               	movlw	255
  1535  000958  2209               	addwfc	(___awmod@dividend+1)^0,f,c
  1536  00095A  0E00               	movlw	0
  1537  00095C  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1538  00095E  0E03               	movlw	3
  1539  000960  6E0A               	movwf	___awmod@divisor^0,c
  1540  000962  EC14  F009         	call	___awmod	;wreg free
  1541  000966  5008               	movf	?___awmod^0,w,c
  1542  000968  2416               	addwf	??_main^0,w,c
  1543  00096A  6ED9               	movwf	fsr2l,c
  1544  00096C  5009               	movf	(?___awmod+1)^0,w,c
  1545  00096E  2017               	addwfc	(??_main+1)^0,w,c
  1546  000970  6EDA               	movwf	fsr2h,c
  1547  000972  0E00               	movlw	0
  1548  000974  6EDF               	movwf	indf2,c
  1549  000976                     
  1550                           ;main.c: 282:         if(testa_ganhou(vermelho))
  1551  000976  0E03               	movlw	3
  1552  000978  6E17               	movwf	(??_main+1)^0,c
  1553  00097A  0E08               	movlw	8
  1554  00097C  6E16               	movwf	??_main^0,c
  1555  00097E  0E77               	movlw	119
  1556  000980                     u1577:
  1557  000980  2EE8               	decfsz	wreg,f,c
  1558  000982  D7FE               	bra	u1577
  1559  000984  2E16               	decfsz	??_main^0,f,c
  1560  000986  D7FC               	bra	u1577
  1561  000988  2E17               	decfsz	(??_main+1)^0,f,c
  1562  00098A  D7FA               	bra	u1577
  1563  00098C  F000               	nop	
  1564  00098E                     
  1565                           ;main.c: 283:         {
  1566  00098E  0627               	decf	main@i^0,f,c
  1567  000990  EF7F  F004         	goto	l1701
  1568  000994                     l1713:
  1569                           
  1570                           ;main.c: 284:             limpa_matriz(vermelho);
  1571  000994  0E00               	movlw	0
  1572  000996  6E25               	movwf	main@pontuacao_vermelho^0,c
  1573                           
  1574                           ;main.c: 285:             limpa_matriz(verde);
  1575  000998  0E00               	movlw	0
  1576  00099A  6E26               	movwf	main@pontuacao_verde^0,c
  1577  00099C                     l1715:
  1578                           
  1579                           ;main.c: 287:             limpa_matriz(marcados);
  1580  00099C  0E0B               	movlw	11
  1581  00099E  6E17               	movwf	(??_main+1)^0,c
  1582  0009A0  0E26               	movlw	38
  1583  0009A2  6E16               	movwf	??_main^0,c
  1584  0009A4  0E5E               	movlw	94
  1585  0009A6                     u1587:
  1586  0009A6  2EE8               	decfsz	wreg,f,c
  1587  0009A8  D7FE               	bra	u1587
  1588  0009AA  2E16               	decfsz	??_main^0,f,c
  1589  0009AC  D7FC               	bra	u1587
  1590  0009AE  2E17               	decfsz	(??_main+1)^0,f,c
  1591  0009B0  D7FA               	bra	u1587
  1592  0009B2                     
  1593                           ;main.c: 289:             cor = 1;
  1594  0009B2  0E41               	movlw	low _verde
  1595  0009B4  6E08               	movwf	limpa_matriz@matriz^0,c
  1596  0009B6  0E00               	movlw	high _verde
  1597  0009B8  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1598  0009BA  ECB7  F009         	call	_limpa_matriz	;wreg free
  1599  0009BE                     
  1600                           ;main.c: 290: 
  1601  0009BE  0E00               	movlw	0
  1602  0009C0  6E2E               	movwf	_linha^0,c
  1603  0009C2                     
  1604                           ;main.c: 291:             for(i = 0; i < pontuacao_vermelho; i++)
  1605  0009C2  0E00               	movlw	0
  1606  0009C4  6E28               	movwf	main@posicao^0,c
  1607  0009C6                     
  1608                           ;main.c: 292:             {
  1609  0009C6  0E01               	movlw	1
  1610  0009C8  6E2F               	movwf	_cursor^0,c
  1611  0009CA                     
  1612                           ;main.c: 293:                 vermelho[i/3][i%3] = 1;
  1613  0009CA  0E01               	movlw	1
  1614  0009CC  6E2C               	movwf	_cor^0,c
  1615  0009CE                     l1727:
  1616                           
  1617                           ;main.c: 296:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1618  0009CE  0E38               	movlw	low _vermelho
  1619  0009D0  6E08               	movwf	testa_ganhou@teste^0,c
  1620  0009D2  0E00               	movlw	high _vermelho
  1621  0009D4  6E09               	movwf	(testa_ganhou@teste+1)^0,c
  1622  0009D6  EC17  F006         	call	_testa_ganhou	;wreg free
  1623  0009DA  0900               	iorlw	0
  1624  0009DC  B4D8               	btfsc	status,2,c
  1625  0009DE  EFF3  F004         	goto	u1501
  1626  0009E2  EFF5  F004         	goto	u1500
  1627  0009E6                     u1501:
  1628  0009E6  EFD5  F005         	goto	l1777
  1629  0009EA                     u1500:
  1630  0009EA                     
  1631                           ;main.c: 297: ;main.c: 298:             if(pontuacao_vermelho == 9)
  1632  0009EA  0E38               	movlw	low _vermelho
  1633  0009EC  6E08               	movwf	limpa_matriz@matriz^0,c
  1634  0009EE  0E00               	movlw	high _vermelho
  1635  0009F0  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1636  0009F2  ECB7  F009         	call	_limpa_matriz	;wreg free
  1637                           
  1638                           ;main.c: 299:             {
  1639  0009F6  0E41               	movlw	low _verde
  1640  0009F8  6E08               	movwf	limpa_matriz@matriz^0,c
  1641  0009FA  0E00               	movlw	high _verde
  1642  0009FC  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1643  0009FE  ECB7  F009         	call	_limpa_matriz	;wreg free
  1644                           
  1645                           ;main.c: 300:                 for(i = pontuacao_vermelho+1; i > 0; i--)
  1646  000A02  0E2F               	movlw	low _cursor
  1647  000A04  6E08               	movwf	limpa_matriz@matriz^0,c
  1648  000A06  0E00               	movlw	high _cursor
  1649  000A08  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1650  000A0A  ECB7  F009         	call	_limpa_matriz	;wreg free
  1651                           
  1652                           ;main.c: 301:                 {
  1653  000A0E  0E19               	movlw	low main@marcados
  1654  000A10  6E08               	movwf	limpa_matriz@matriz^0,c
  1655  000A12  0E00               	movlw	high main@marcados
  1656  000A14  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1657  000A16  ECB7  F009         	call	_limpa_matriz	;wreg free
  1658  000A1A                     
  1659                           ;main.c: 302:                     vermelho[(i-1)/3][(i-1)%3] = 0;
  1660  000A1A  2A25               	incf	main@pontuacao_vermelho^0,f,c
  1661  000A1C                     
  1662                           ;main.c: 303:                     _delay((unsigned long)((100)*(16000000/4000.0)));
  1663  000A1C  0E01               	movlw	1
  1664  000A1E  6E2C               	movwf	_cor^0,c
  1665  000A20                     
  1666                           ;main.c: 305:                 pontuacao_vermelho = 0;
  1667  000A20  0E00               	movlw	0
  1668  000A22  6E27               	movwf	main@i^0,c
  1669  000A24  EF4D  F005         	goto	l1743
  1670  000A28                     l1737:
  1671                           
  1672                           ;main.c: 306:                 pontuacao_verde = 0;;main.c: 307:             }
  1673  000A28  0E00               	movlw	0
  1674  000A2A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1675  000A2C  0E03               	movlw	3
  1676  000A2E  6E0A               	movwf	___awdiv@divisor^0,c
  1677  000A30  C027  F008         	movff	main@i,___awdiv@dividend
  1678  000A34  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1679  000A36  ECB2  F008         	call	___awdiv	;wreg free
  1680  000A3A  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1681  000A3E  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1682  000A42  0E00               	movlw	0
  1683  000A44  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1684  000A46  0E03               	movlw	3
  1685  000A48  6E12               	movwf	___wmul@multiplicand^0,c
  1686  000A4A  ECE0  F009         	call	___wmul	;wreg free
  1687  000A4E  0E38               	movlw	low _vermelho
  1688  000A50  6E16               	movwf	??_main^0,c
  1689  000A52  0E00               	movlw	high _vermelho
  1690  000A54  6E17               	movwf	(??_main+1)^0,c
  1691  000A56  5010               	movf	?___wmul^0,w,c
  1692  000A58  2616               	addwf	??_main^0,f,c
  1693  000A5A  5011               	movf	(?___wmul+1)^0,w,c
  1694  000A5C  2217               	addwfc	(??_main+1)^0,f,c
  1695  000A5E  C027  F008         	movff	main@i,___awmod@dividend
  1696  000A62  6A09               	clrf	(___awmod@dividend+1)^0,c
  1697  000A64  0E00               	movlw	0
  1698  000A66  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1699  000A68  0E03               	movlw	3
  1700  000A6A  6E0A               	movwf	___awmod@divisor^0,c
  1701  000A6C  EC14  F009         	call	___awmod	;wreg free
  1702  000A70  5008               	movf	?___awmod^0,w,c
  1703  000A72  2416               	addwf	??_main^0,w,c
  1704  000A74  6ED9               	movwf	fsr2l,c
  1705  000A76  5009               	movf	(?___awmod+1)^0,w,c
  1706  000A78  2017               	addwfc	(??_main+1)^0,w,c
  1707  000A7A  6EDA               	movwf	fsr2h,c
  1708  000A7C  0E01               	movlw	1
  1709  000A7E  6EDF               	movwf	indf2,c
  1710  000A80                     
  1711                           ;main.c: 308:             _delay((unsigned long)((500)*(16000000/4000.0)));
  1712  000A80  0E05               	movlw	5
  1713  000A82  6E17               	movwf	(??_main+1)^0,c
  1714  000A84  0E0F               	movlw	15
  1715  000A86  6E16               	movwf	??_main^0,c
  1716  000A88  0EF1               	movlw	241
  1717  000A8A                     u1597:
  1718  000A8A  2EE8               	decfsz	wreg,f,c
  1719  000A8C  D7FE               	bra	u1597
  1720  000A8E  2E16               	decfsz	??_main^0,f,c
  1721  000A90  D7FC               	bra	u1597
  1722  000A92  2E17               	decfsz	(??_main+1)^0,f,c
  1723  000A94  D7FA               	bra	u1597
  1724  000A96  F000               	nop	
  1725  000A98                     
  1726                           ;main.c: 309: 
  1727  000A98  2A27               	incf	main@i^0,f,c
  1728  000A9A                     l1743:
  1729  000A9A  5025               	movf	main@pontuacao_vermelho^0,w,c
  1730  000A9C  5C27               	subwf	main@i^0,w,c
  1731  000A9E  A0D8               	btfss	status,0,c
  1732  000AA0  EF54  F005         	goto	u1511
  1733  000AA4  EF56  F005         	goto	u1510
  1734  000AA8                     u1511:
  1735  000AA8  EF14  F005         	goto	l1737
  1736  000AAC                     u1510:
  1737  000AAC                     
  1738                           ;main.c: 310:             limpa_matriz(vermelho);
  1739  000AAC  0E15               	movlw	21
  1740  000AAE  6E17               	movwf	(??_main+1)^0,c
  1741  000AB0  0E4B               	movlw	75
  1742  000AB2  6E16               	movwf	??_main^0,c
  1743  000AB4  0EBE               	movlw	190
  1744  000AB6                     u1607:
  1745  000AB6  2EE8               	decfsz	wreg,f,c
  1746  000AB8  D7FE               	bra	u1607
  1747  000ABA  2E16               	decfsz	??_main^0,f,c
  1748  000ABC  D7FC               	bra	u1607
  1749  000ABE  2E17               	decfsz	(??_main+1)^0,f,c
  1750  000AC0  D7FA               	bra	u1607
  1751  000AC2  D000               	nop2	
  1752  000AC4                     
  1753                           ;main.c: 312:             posicao = 0;
  1754  000AC4  0E09               	movlw	9
  1755  000AC6  1825               	xorwf	main@pontuacao_vermelho^0,w,c
  1756  000AC8  A4D8               	btfss	status,2,c
  1757  000ACA  EF69  F005         	goto	u1521
  1758  000ACE  EF6B  F005         	goto	u1520
  1759  000AD2                     u1521:
  1760  000AD2  EFBC  F005         	goto	l1765
  1761  000AD6                     u1520:
  1762  000AD6                     
  1763                           ;main.c: 313:             cursor[0][0] = 1;;main.c: 314:             cor = 0;
  1764  000AD6  2825               	incf	main@pontuacao_vermelho^0,w,c
  1765  000AD8  6E27               	movwf	main@i^0,c
  1766  000ADA                     l1751:
  1767  000ADA  5027               	movf	main@i^0,w,c
  1768  000ADC  A4D8               	btfss	status,2,c
  1769  000ADE  EF73  F005         	goto	u1531
  1770  000AE2  EF75  F005         	goto	u1530
  1771  000AE6                     u1531:
  1772  000AE6  EF77  F005         	goto	l1755
  1773  000AEA                     u1530:
  1774  000AEA  EFB8  F005         	goto	l1763
  1775  000AEE                     l1755:
  1776                           
  1777                           ;main.c: 315:         };main.c: 316: 
  1778  000AEE  0E00               	movlw	0
  1779  000AF0  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1780  000AF2  0E03               	movlw	3
  1781  000AF4  6E0A               	movwf	___awdiv@divisor^0,c
  1782  000AF6  0EFF               	movlw	255
  1783  000AF8  2427               	addwf	main@i^0,w,c
  1784  000AFA  6E08               	movwf	___awdiv@dividend^0,c
  1785  000AFC  6A09               	clrf	(___awdiv@dividend+1)^0,c
  1786  000AFE  0EFF               	movlw	255
  1787  000B00  2209               	addwfc	(___awdiv@dividend+1)^0,f,c
  1788  000B02  ECB2  F008         	call	___awdiv	;wreg free
  1789  000B06  C008  F010         	movff	?___awdiv,___wmul@multiplier
  1790  000B0A  C009  F011         	movff	?___awdiv+1,___wmul@multiplier+1
  1791  000B0E  0E00               	movlw	0
  1792  000B10  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1793  000B12  0E03               	movlw	3
  1794  000B14  6E12               	movwf	___wmul@multiplicand^0,c
  1795  000B16  ECE0  F009         	call	___wmul	;wreg free
  1796  000B1A  0E38               	movlw	low _vermelho
  1797  000B1C  6E16               	movwf	??_main^0,c
  1798  000B1E  0E00               	movlw	high _vermelho
  1799  000B20  6E17               	movwf	(??_main+1)^0,c
  1800  000B22  5010               	movf	?___wmul^0,w,c
  1801  000B24  2616               	addwf	??_main^0,f,c
  1802  000B26  5011               	movf	(?___wmul+1)^0,w,c
  1803  000B28  2217               	addwfc	(??_main+1)^0,f,c
  1804  000B2A  0EFF               	movlw	255
  1805  000B2C  2427               	addwf	main@i^0,w,c
  1806  000B2E  6E08               	movwf	___awmod@dividend^0,c
  1807  000B30  6A09               	clrf	(___awmod@dividend+1)^0,c
  1808  000B32  0EFF               	movlw	255
  1809  000B34  2209               	addwfc	(___awmod@dividend+1)^0,f,c
  1810  000B36  0E00               	movlw	0
  1811  000B38  6E0B               	movwf	(___awmod@divisor+1)^0,c
  1812  000B3A  0E03               	movlw	3
  1813  000B3C  6E0A               	movwf	___awmod@divisor^0,c
  1814  000B3E  EC14  F009         	call	___awmod	;wreg free
  1815  000B42  5008               	movf	?___awmod^0,w,c
  1816  000B44  2416               	addwf	??_main^0,w,c
  1817  000B46  6ED9               	movwf	fsr2l,c
  1818  000B48  5009               	movf	(?___awmod+1)^0,w,c
  1819  000B4A  2017               	addwfc	(??_main+1)^0,w,c
  1820  000B4C  6EDA               	movwf	fsr2h,c
  1821  000B4E  0E00               	movlw	0
  1822  000B50  6EDF               	movwf	indf2,c
  1823  000B52                     
  1824                           ;main.c: 317:         if(testa_velha(verde, vermelho))
  1825  000B52  0E03               	movlw	3
  1826  000B54  6E17               	movwf	(??_main+1)^0,c
  1827  000B56  0E08               	movlw	8
  1828  000B58  6E16               	movwf	??_main^0,c
  1829  000B5A  0E77               	movlw	119
  1830  000B5C                     u1617:
  1831  000B5C  2EE8               	decfsz	wreg,f,c
  1832  000B5E  D7FE               	bra	u1617
  1833  000B60  2E16               	decfsz	??_main^0,f,c
  1834  000B62  D7FC               	bra	u1617
  1835  000B64  2E17               	decfsz	(??_main+1)^0,f,c
  1836  000B66  D7FA               	bra	u1617
  1837  000B68  F000               	nop	
  1838  000B6A                     
  1839                           ;main.c: 318:         {
  1840  000B6A  0627               	decf	main@i^0,f,c
  1841  000B6C  EF6D  F005         	goto	l1751
  1842  000B70                     l1763:
  1843                           
  1844                           ;main.c: 319:             limpa_matriz(verde);
  1845  000B70  0E00               	movlw	0
  1846  000B72  6E25               	movwf	main@pontuacao_vermelho^0,c
  1847                           
  1848                           ;main.c: 320:             limpa_matriz(vermelho);
  1849  000B74  0E00               	movlw	0
  1850  000B76  6E26               	movwf	main@pontuacao_verde^0,c
  1851  000B78                     l1765:
  1852                           
  1853                           ;main.c: 322:             limpa_matriz(marcados);
  1854  000B78  0E0B               	movlw	11
  1855  000B7A  6E17               	movwf	(??_main+1)^0,c
  1856  000B7C  0E26               	movlw	38
  1857  000B7E  6E16               	movwf	??_main^0,c
  1858  000B80  0E5E               	movlw	94
  1859  000B82                     u1627:
  1860  000B82  2EE8               	decfsz	wreg,f,c
  1861  000B84  D7FE               	bra	u1627
  1862  000B86  2E16               	decfsz	??_main^0,f,c
  1863  000B88  D7FC               	bra	u1627
  1864  000B8A  2E17               	decfsz	(??_main+1)^0,f,c
  1865  000B8C  D7FA               	bra	u1627
  1866  000B8E                     
  1867                           ;main.c: 324:             linha = 0;
  1868  000B8E  0E38               	movlw	low _vermelho
  1869  000B90  6E08               	movwf	limpa_matriz@matriz^0,c
  1870  000B92  0E00               	movlw	high _vermelho
  1871  000B94  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1872  000B96  ECB7  F009         	call	_limpa_matriz	;wreg free
  1873  000B9A                     
  1874                           ;main.c: 325:             posicao = 0;
  1875  000B9A  0E00               	movlw	0
  1876  000B9C  6E2E               	movwf	_linha^0,c
  1877  000B9E                     
  1878                           ;main.c: 326:             cursor[0][0] = 1;
  1879  000B9E  0E00               	movlw	0
  1880  000BA0  6E28               	movwf	main@posicao^0,c
  1881  000BA2                     
  1882                           ;main.c: 327:             cor = 0;
  1883  000BA2  0E01               	movlw	1
  1884  000BA4  6E2F               	movwf	_cursor^0,c
  1885  000BA6                     
  1886                           ;main.c: 328:         }
  1887  000BA6  0E00               	movlw	0
  1888  000BA8  6E2C               	movwf	_cor^0,c
  1889  000BAA                     l1777:
  1890                           
  1891                           ;main.c: 331: }
  1892  000BAA  0E41               	movlw	low _verde
  1893  000BAC  6E08               	movwf	testa_velha@teste1^0,c
  1894  000BAE  0E00               	movlw	high _verde
  1895  000BB0  6E09               	movwf	(testa_velha@teste1+1)^0,c
  1896  000BB2  0E38               	movlw	low _vermelho
  1897  000BB4  6E0A               	movwf	testa_velha@teste2^0,c
  1898  000BB6  0E00               	movlw	high _vermelho
  1899  000BB8  6E0B               	movwf	(testa_velha@teste2+1)^0,c
  1900  000BBA  EC6C  F009         	call	_testa_velha	;wreg free
  1901  000BBE  0900               	iorlw	0
  1902  000BC0  B4D8               	btfsc	status,2,c
  1903  000BC2  EFE5  F005         	goto	u1541
  1904  000BC6  EFE7  F005         	goto	u1540
  1905  000BCA                     u1541:
  1906  000BCA  EF43  F000         	goto	l1589
  1907  000BCE                     u1540:
  1908  000BCE  0E41               	movlw	low _verde
  1909  000BD0  6E08               	movwf	limpa_matriz@matriz^0,c
  1910  000BD2  0E00               	movlw	high _verde
  1911  000BD4  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1912  000BD6  ECB7  F009         	call	_limpa_matriz	;wreg free
  1913  000BDA  0E38               	movlw	low _vermelho
  1914  000BDC  6E08               	movwf	limpa_matriz@matriz^0,c
  1915  000BDE  0E00               	movlw	high _vermelho
  1916  000BE0  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1917  000BE2  ECB7  F009         	call	_limpa_matriz	;wreg free
  1918  000BE6  0E2F               	movlw	low _cursor
  1919  000BE8  6E08               	movwf	limpa_matriz@matriz^0,c
  1920  000BEA  0E00               	movlw	high _cursor
  1921  000BEC  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1922  000BEE  ECB7  F009         	call	_limpa_matriz	;wreg free
  1923  000BF2  0E19               	movlw	low main@marcados
  1924  000BF4  6E08               	movwf	limpa_matriz@matriz^0,c
  1925  000BF6  0E00               	movlw	high main@marcados
  1926  000BF8  6E09               	movwf	(limpa_matriz@matriz+1)^0,c
  1927  000BFA  ECB7  F009         	call	_limpa_matriz	;wreg free
  1928  000BFE  0E15               	movlw	21
  1929  000C00  6E17               	movwf	(??_main+1)^0,c
  1930  000C02  0E4B               	movlw	75
  1931  000C04  6E16               	movwf	??_main^0,c
  1932  000C06  0EBE               	movlw	190
  1933  000C08                     u1637:
  1934  000C08  2EE8               	decfsz	wreg,f,c
  1935  000C0A  D7FE               	bra	u1637
  1936  000C0C  2E16               	decfsz	??_main^0,f,c
  1937  000C0E  D7FC               	bra	u1637
  1938  000C10  2E17               	decfsz	(??_main+1)^0,f,c
  1939  000C12  D7FA               	bra	u1637
  1940  000C14  D000               	nop2	
  1941  000C16  0E00               	movlw	0
  1942  000C18  6E2E               	movwf	_linha^0,c
  1943  000C1A  0E00               	movlw	0
  1944  000C1C  6E28               	movwf	main@posicao^0,c
  1945  000C1E  0E01               	movlw	1
  1946  000C20  6E2F               	movwf	_cursor^0,c
  1947  000C22  0E00               	movlw	0
  1948  000C24  6E2C               	movwf	_cor^0,c
  1949  000C26  EF43  F000         	goto	l1589
  1950  000C2A  EF07  F000         	goto	start
  1951  000C2E                     __end_of_main:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _testa_velha *****************
  1955 ;; Defined at:
  1956 ;;		line 123 in file "main.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  teste1          2    7[COMRAM] PTR unsigned char [3]
  1959 ;;		 -> verde(9), 
  1960 ;;  teste2          2    9[COMRAM] PTR unsigned char [3]
  1961 ;;		 -> vermelho(9), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  j               1   18[COMRAM] unsigned char 
  1964 ;;  i               1   17[COMRAM] unsigned char 
  1965 ;;  soma            1   16[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      unsigned char 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         4       0       0       0       0       0       0
  1976 ;;      Locals:         3       0       0       0       0       0       0
  1977 ;;      Temps:          5       0       0       0       0       0       0
  1978 ;;      Totals:        12       0       0       0       0       0       0
  1979 ;;Total ram usage:       12 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text1
  1990  0012D8                     __ptext1:
  1991                           	callstack 0
  1992  0012D8                     _testa_velha:
  1993                           	callstack 29
  1994  0012D8                     
  1995                           ;main.c: 123:     if(soma == 9);main.c: 124:         return 1;;main.c: 125:     else;mai
      +                          n.c: 127: }
  1996  0012D8  0E00               	movlw	0
  1997  0012DA  6E11               	movwf	testa_velha@soma^0,c
  1998                           
  1999                           ;main.c: 131: {
  2000  0012DC  0E00               	movlw	0
  2001  0012DE  6E12               	movwf	testa_velha@i^0,c
  2002  0012E0                     l1409:
  2003                           
  2004                           ;main.c: 132:     unsigned char i, j;;main.c: 133: 
  2005  0012E0  0E00               	movlw	0
  2006  0012E2  6E13               	movwf	testa_velha@j^0,c
  2007  0012E4                     l1415:
  2008                           
  2009                           ;main.c: 134:     for(i = 0; i < 3; i++)
  2010  0012E4  5012               	movf	testa_velha@i^0,w,c
  2011  0012E6  0D03               	mullw	3
  2012  0012E8  C00A  F00C         	movff	testa_velha@teste2,??_testa_velha
  2013  0012EC  C00B  F00D         	movff	testa_velha@teste2+1,??_testa_velha+1
  2014  0012F0  50F3               	movf	243,w,c
  2015  0012F2  260C               	addwf	??_testa_velha^0,f,c
  2016  0012F4  50F4               	movf	244,w,c
  2017  0012F6  220D               	addwfc	(??_testa_velha+1)^0,f,c
  2018  0012F8  5013               	movf	testa_velha@j^0,w,c
  2019  0012FA  240C               	addwf	??_testa_velha^0,w,c
  2020  0012FC  6ED9               	movwf	fsr2l,c
  2021  0012FE  0E00               	movlw	0
  2022  001300  200D               	addwfc	(??_testa_velha+1)^0,w,c
  2023  001302  6EDA               	movwf	fsr2h,c
  2024  001304  50DF               	movf	indf2,w,c
  2025  001306  6E0E               	movwf	(??_testa_velha+2)^0,c
  2026  001308  5012               	movf	testa_velha@i^0,w,c
  2027  00130A  0D03               	mullw	3
  2028  00130C  C008  F00F         	movff	testa_velha@teste1,??_testa_velha+3
  2029  001310  C009  F010         	movff	testa_velha@teste1+1,??_testa_velha+4
  2030  001314  50F3               	movf	243,w,c
  2031  001316  260F               	addwf	(??_testa_velha+3)^0,f,c
  2032  001318  50F4               	movf	244,w,c
  2033  00131A  2210               	addwfc	(??_testa_velha+4)^0,f,c
  2034  00131C  5013               	movf	testa_velha@j^0,w,c
  2035  00131E  240F               	addwf	(??_testa_velha+3)^0,w,c
  2036  001320  6ED9               	movwf	fsr2l,c
  2037  001322  0E00               	movlw	0
  2038  001324  2010               	addwfc	(??_testa_velha+4)^0,w,c
  2039  001326  6EDA               	movwf	fsr2h,c
  2040  001328  50DF               	movf	indf2,w,c
  2041  00132A  240E               	addwf	(??_testa_velha+2)^0,w,c
  2042  00132C  2611               	addwf	testa_velha@soma^0,f,c
  2043  00132E  2A13               	incf	testa_velha@j^0,f,c
  2044  001330  0E02               	movlw	2
  2045  001332  6413               	cpfsgt	testa_velha@j^0,c
  2046  001334  EF9E  F009         	goto	u1091
  2047  001338  EFA0  F009         	goto	u1090
  2048  00133C                     u1091:
  2049  00133C  EF72  F009         	goto	l1415
  2050  001340                     u1090:
  2051  001340                     
  2052                           ;main.c: 135:     {
  2053  001340  2A12               	incf	testa_velha@i^0,f,c
  2054  001342  0E02               	movlw	2
  2055  001344  6412               	cpfsgt	testa_velha@i^0,c
  2056  001346  EFA7  F009         	goto	u1101
  2057  00134A  EFA9  F009         	goto	u1100
  2058  00134E                     u1101:
  2059  00134E  EF70  F009         	goto	l1409
  2060  001352                     u1100:
  2061  001352                     
  2062                           ;main.c: 137:             matriz[i][j] = 0;
  2063  001352  0E09               	movlw	9
  2064  001354  1811               	xorwf	testa_velha@soma^0,w,c
  2065  001356  A4D8               	btfss	status,2,c
  2066  001358  EFB0  F009         	goto	u1111
  2067  00135C  EFB2  F009         	goto	u1110
  2068  001360                     u1111:
  2069  001360  EFB5  F009         	goto	l1433
  2070  001364                     u1110:
  2071  001364                     
  2072                           ;main.c: 138:     }
  2073  001364  0E01               	movlw	1
  2074  001366  EFB6  F009         	goto	l79
  2075  00136A                     l1433:
  2076                           
  2077                           ;main.c: 140: 
  2078  00136A  0E00               	movlw	0
  2079  00136C                     l79:
  2080  00136C  0012               	return		;funcret
  2081  00136E                     __end_of_testa_velha:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _testa_ganhou *****************
  2085 ;; Defined at:
  2086 ;;		line 94 in file "main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  teste           2    7[COMRAM] PTR unsigned char [3]
  2089 ;;		 -> verde(9), vermelho(9), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      unsigned char 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2101 ;;      Params:         2       0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0
  2104 ;;      Totals:         2       0       0       0       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text2
  2116  000C2E                     __ptext2:
  2117                           	callstack 0
  2118  000C2E                     _testa_ganhou:
  2119                           	callstack 29
  2120  000C2E                     
  2121                           ;main.c: 94:         return 1;;main.c: 95:     if(teste[2][0] && teste[2][1] && teste[2]
      +                          [2]);main.c: 97: 
  2122  000C2E  C008  FFD9         	movff	testa_ganhou@teste,fsr2l
  2123  000C32  C009  FFDA         	movff	testa_ganhou@teste+1,fsr2h
  2124  000C36  50DF               	movf	indf2,w,c
  2125  000C38  B4D8               	btfsc	status,2,c
  2126  000C3A  EF21  F006         	goto	u851
  2127  000C3E  EF23  F006         	goto	u850
  2128  000C42                     u851:
  2129  000C42  EF42  F006         	goto	l1329
  2130  000C46                     u850:
  2131  000C46  EE20 F003          	lfsr	2,3
  2132  000C4A  5008               	movf	testa_ganhou@teste^0,w,c
  2133  000C4C  26D9               	addwf	fsr2l,f,c
  2134  000C4E  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2135  000C50  22DA               	addwfc	fsr2h,f,c
  2136  000C52  50DF               	movf	indf2,w,c
  2137  000C54  B4D8               	btfsc	status,2,c
  2138  000C56  EF2F  F006         	goto	u861
  2139  000C5A  EF31  F006         	goto	u860
  2140  000C5E                     u861:
  2141  000C5E  EF42  F006         	goto	l1329
  2142  000C62                     u860:
  2143  000C62  EE20 F006          	lfsr	2,6
  2144  000C66  5008               	movf	testa_ganhou@teste^0,w,c
  2145  000C68  26D9               	addwf	fsr2l,f,c
  2146  000C6A  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2147  000C6C  22DA               	addwfc	fsr2h,f,c
  2148  000C6E  50DF               	movf	indf2,w,c
  2149  000C70  B4D8               	btfsc	status,2,c
  2150  000C72  EF3D  F006         	goto	u871
  2151  000C76  EF3F  F006         	goto	u870
  2152  000C7A                     u871:
  2153  000C7A  EF42  F006         	goto	l1329
  2154  000C7E                     u870:
  2155  000C7E                     l1325:
  2156                           
  2157                           ;main.c: 98: 
  2158  000C7E  0E01               	movlw	1
  2159  000C80  EF73  F007         	goto	l64
  2160  000C84                     l1329:
  2161                           
  2162                           ;main.c: 99:     if(teste[0][0] && teste[1][1] && teste[2][2])
  2163  000C84  EE20 F001          	lfsr	2,1
  2164  000C88  5008               	movf	testa_ganhou@teste^0,w,c
  2165  000C8A  26D9               	addwf	fsr2l,f,c
  2166  000C8C  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2167  000C8E  22DA               	addwfc	fsr2h,f,c
  2168  000C90  50DF               	movf	indf2,w,c
  2169  000C92  B4D8               	btfsc	status,2,c
  2170  000C94  EF4E  F006         	goto	u881
  2171  000C98  EF50  F006         	goto	u880
  2172  000C9C                     u881:
  2173  000C9C  EF6E  F006         	goto	l1339
  2174  000CA0                     u880:
  2175  000CA0  EE20 F004          	lfsr	2,4
  2176  000CA4  5008               	movf	testa_ganhou@teste^0,w,c
  2177  000CA6  26D9               	addwf	fsr2l,f,c
  2178  000CA8  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2179  000CAA  22DA               	addwfc	fsr2h,f,c
  2180  000CAC  50DF               	movf	indf2,w,c
  2181  000CAE  B4D8               	btfsc	status,2,c
  2182  000CB0  EF5C  F006         	goto	u891
  2183  000CB4  EF5E  F006         	goto	u890
  2184  000CB8                     u891:
  2185  000CB8  EF6E  F006         	goto	l1339
  2186  000CBC                     u890:
  2187  000CBC  EE20 F007          	lfsr	2,7
  2188  000CC0  5008               	movf	testa_ganhou@teste^0,w,c
  2189  000CC2  26D9               	addwf	fsr2l,f,c
  2190  000CC4  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2191  000CC6  22DA               	addwfc	fsr2h,f,c
  2192  000CC8  50DF               	movf	indf2,w,c
  2193  000CCA  B4D8               	btfsc	status,2,c
  2194  000CCC  EF6A  F006         	goto	u901
  2195  000CD0  EF6C  F006         	goto	u900
  2196  000CD4                     u901:
  2197  000CD4  EF6E  F006         	goto	l1339
  2198  000CD8                     u900:
  2199  000CD8  EF3F  F006         	goto	l1325
  2200  000CDC                     l1339:
  2201                           
  2202                           ;main.c: 101:     if(teste[0][2] && teste[1][1] && teste[2][0])
  2203  000CDC  EE20 F002          	lfsr	2,2
  2204  000CE0  5008               	movf	testa_ganhou@teste^0,w,c
  2205  000CE2  26D9               	addwf	fsr2l,f,c
  2206  000CE4  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2207  000CE6  22DA               	addwfc	fsr2h,f,c
  2208  000CE8  50DF               	movf	indf2,w,c
  2209  000CEA  B4D8               	btfsc	status,2,c
  2210  000CEC  EF7A  F006         	goto	u911
  2211  000CF0  EF7C  F006         	goto	u910
  2212  000CF4                     u911:
  2213  000CF4  EF9A  F006         	goto	l1349
  2214  000CF8                     u910:
  2215  000CF8  EE20 F005          	lfsr	2,5
  2216  000CFC  5008               	movf	testa_ganhou@teste^0,w,c
  2217  000CFE  26D9               	addwf	fsr2l,f,c
  2218  000D00  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2219  000D02  22DA               	addwfc	fsr2h,f,c
  2220  000D04  50DF               	movf	indf2,w,c
  2221  000D06  B4D8               	btfsc	status,2,c
  2222  000D08  EF88  F006         	goto	u921
  2223  000D0C  EF8A  F006         	goto	u920
  2224  000D10                     u921:
  2225  000D10  EF9A  F006         	goto	l1349
  2226  000D14                     u920:
  2227  000D14  EE20 F008          	lfsr	2,8
  2228  000D18  5008               	movf	testa_ganhou@teste^0,w,c
  2229  000D1A  26D9               	addwf	fsr2l,f,c
  2230  000D1C  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2231  000D1E  22DA               	addwfc	fsr2h,f,c
  2232  000D20  50DF               	movf	indf2,w,c
  2233  000D22  B4D8               	btfsc	status,2,c
  2234  000D24  EF96  F006         	goto	u931
  2235  000D28  EF98  F006         	goto	u930
  2236  000D2C                     u931:
  2237  000D2C  EF9A  F006         	goto	l1349
  2238  000D30                     u930:
  2239  000D30  EF3F  F006         	goto	l1325
  2240  000D34                     l1349:
  2241                           
  2242                           ;main.c: 105:     return 0;
  2243  000D34  C008  FFD9         	movff	testa_ganhou@teste,fsr2l
  2244  000D38  C009  FFDA         	movff	testa_ganhou@teste+1,fsr2h
  2245  000D3C  50DF               	movf	indf2,w,c
  2246  000D3E  B4D8               	btfsc	status,2,c
  2247  000D40  EFA4  F006         	goto	u941
  2248  000D44  EFA6  F006         	goto	u940
  2249  000D48                     u941:
  2250  000D48  EFC4  F006         	goto	l1359
  2251  000D4C                     u940:
  2252  000D4C  EE20 F001          	lfsr	2,1
  2253  000D50  5008               	movf	testa_ganhou@teste^0,w,c
  2254  000D52  26D9               	addwf	fsr2l,f,c
  2255  000D54  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2256  000D56  22DA               	addwfc	fsr2h,f,c
  2257  000D58  50DF               	movf	indf2,w,c
  2258  000D5A  B4D8               	btfsc	status,2,c
  2259  000D5C  EFB2  F006         	goto	u951
  2260  000D60  EFB4  F006         	goto	u950
  2261  000D64                     u951:
  2262  000D64  EFC4  F006         	goto	l1359
  2263  000D68                     u950:
  2264  000D68  EE20 F002          	lfsr	2,2
  2265  000D6C  5008               	movf	testa_ganhou@teste^0,w,c
  2266  000D6E  26D9               	addwf	fsr2l,f,c
  2267  000D70  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2268  000D72  22DA               	addwfc	fsr2h,f,c
  2269  000D74  50DF               	movf	indf2,w,c
  2270  000D76  B4D8               	btfsc	status,2,c
  2271  000D78  EFC0  F006         	goto	u961
  2272  000D7C  EFC2  F006         	goto	u960
  2273  000D80                     u961:
  2274  000D80  EFC4  F006         	goto	l1359
  2275  000D84                     u960:
  2276  000D84  EF3F  F006         	goto	l1325
  2277  000D88                     l1359:
  2278                           
  2279                           ;main.c: 107: 
  2280  000D88  EE20 F003          	lfsr	2,3
  2281  000D8C  5008               	movf	testa_ganhou@teste^0,w,c
  2282  000D8E  26D9               	addwf	fsr2l,f,c
  2283  000D90  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2284  000D92  22DA               	addwfc	fsr2h,f,c
  2285  000D94  50DF               	movf	indf2,w,c
  2286  000D96  B4D8               	btfsc	status,2,c
  2287  000D98  EFD0  F006         	goto	u971
  2288  000D9C  EFD2  F006         	goto	u970
  2289  000DA0                     u971:
  2290  000DA0  EFF0  F006         	goto	l1369
  2291  000DA4                     u970:
  2292  000DA4  EE20 F004          	lfsr	2,4
  2293  000DA8  5008               	movf	testa_ganhou@teste^0,w,c
  2294  000DAA  26D9               	addwf	fsr2l,f,c
  2295  000DAC  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2296  000DAE  22DA               	addwfc	fsr2h,f,c
  2297  000DB0  50DF               	movf	indf2,w,c
  2298  000DB2  B4D8               	btfsc	status,2,c
  2299  000DB4  EFDE  F006         	goto	u981
  2300  000DB8  EFE0  F006         	goto	u980
  2301  000DBC                     u981:
  2302  000DBC  EFF0  F006         	goto	l1369
  2303  000DC0                     u980:
  2304  000DC0  EE20 F005          	lfsr	2,5
  2305  000DC4  5008               	movf	testa_ganhou@teste^0,w,c
  2306  000DC6  26D9               	addwf	fsr2l,f,c
  2307  000DC8  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2308  000DCA  22DA               	addwfc	fsr2h,f,c
  2309  000DCC  50DF               	movf	indf2,w,c
  2310  000DCE  B4D8               	btfsc	status,2,c
  2311  000DD0  EFEC  F006         	goto	u991
  2312  000DD4  EFEE  F006         	goto	u990
  2313  000DD8                     u991:
  2314  000DD8  EFF0  F006         	goto	l1369
  2315  000DDC                     u990:
  2316  000DDC  EF3F  F006         	goto	l1325
  2317  000DE0                     l1369:
  2318                           
  2319                           ;main.c: 109: unsigned char testa_velha(unsigned char teste1[3][3], unsigned char teste2
      +                          [3][3])
  2320  000DE0  EE20 F006          	lfsr	2,6
  2321  000DE4  5008               	movf	testa_ganhou@teste^0,w,c
  2322  000DE6  26D9               	addwf	fsr2l,f,c
  2323  000DE8  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2324  000DEA  22DA               	addwfc	fsr2h,f,c
  2325  000DEC  50DF               	movf	indf2,w,c
  2326  000DEE  B4D8               	btfsc	status,2,c
  2327  000DF0  EFFC  F006         	goto	u1001
  2328  000DF4  EFFE  F006         	goto	u1000
  2329  000DF8                     u1001:
  2330  000DF8  EF1C  F007         	goto	l1379
  2331  000DFC                     u1000:
  2332  000DFC  EE20 F007          	lfsr	2,7
  2333  000E00  5008               	movf	testa_ganhou@teste^0,w,c
  2334  000E02  26D9               	addwf	fsr2l,f,c
  2335  000E04  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2336  000E06  22DA               	addwfc	fsr2h,f,c
  2337  000E08  50DF               	movf	indf2,w,c
  2338  000E0A  B4D8               	btfsc	status,2,c
  2339  000E0C  EF0A  F007         	goto	u1011
  2340  000E10  EF0C  F007         	goto	u1010
  2341  000E14                     u1011:
  2342  000E14  EF1C  F007         	goto	l1379
  2343  000E18                     u1010:
  2344  000E18  EE20 F008          	lfsr	2,8
  2345  000E1C  5008               	movf	testa_ganhou@teste^0,w,c
  2346  000E1E  26D9               	addwf	fsr2l,f,c
  2347  000E20  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2348  000E22  22DA               	addwfc	fsr2h,f,c
  2349  000E24  50DF               	movf	indf2,w,c
  2350  000E26  B4D8               	btfsc	status,2,c
  2351  000E28  EF18  F007         	goto	u1021
  2352  000E2C  EF1A  F007         	goto	u1020
  2353  000E30                     u1021:
  2354  000E30  EF1C  F007         	goto	l1379
  2355  000E34                     u1020:
  2356  000E34  EF3F  F006         	goto	l1325
  2357  000E38                     l1379:
  2358                           
  2359                           ;main.c: 113:     soma = 0;
  2360  000E38  C008  FFD9         	movff	testa_ganhou@teste,fsr2l
  2361  000E3C  C009  FFDA         	movff	testa_ganhou@teste+1,fsr2h
  2362  000E40  50DF               	movf	indf2,w,c
  2363  000E42  B4D8               	btfsc	status,2,c
  2364  000E44  EF26  F007         	goto	u1031
  2365  000E48  EF28  F007         	goto	u1030
  2366  000E4C                     u1031:
  2367  000E4C  EF46  F007         	goto	l1389
  2368  000E50                     u1030:
  2369  000E50  EE20 F004          	lfsr	2,4
  2370  000E54  5008               	movf	testa_ganhou@teste^0,w,c
  2371  000E56  26D9               	addwf	fsr2l,f,c
  2372  000E58  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2373  000E5A  22DA               	addwfc	fsr2h,f,c
  2374  000E5C  50DF               	movf	indf2,w,c
  2375  000E5E  B4D8               	btfsc	status,2,c
  2376  000E60  EF34  F007         	goto	u1041
  2377  000E64  EF36  F007         	goto	u1040
  2378  000E68                     u1041:
  2379  000E68  EF46  F007         	goto	l1389
  2380  000E6C                     u1040:
  2381  000E6C  EE20 F008          	lfsr	2,8
  2382  000E70  5008               	movf	testa_ganhou@teste^0,w,c
  2383  000E72  26D9               	addwf	fsr2l,f,c
  2384  000E74  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2385  000E76  22DA               	addwfc	fsr2h,f,c
  2386  000E78  50DF               	movf	indf2,w,c
  2387  000E7A  B4D8               	btfsc	status,2,c
  2388  000E7C  EF42  F007         	goto	u1051
  2389  000E80  EF44  F007         	goto	u1050
  2390  000E84                     u1051:
  2391  000E84  EF46  F007         	goto	l1389
  2392  000E88                     u1050:
  2393  000E88  EF3F  F006         	goto	l1325
  2394  000E8C                     l1389:
  2395                           
  2396                           ;main.c: 115: 
  2397  000E8C  EE20 F002          	lfsr	2,2
  2398  000E90  5008               	movf	testa_ganhou@teste^0,w,c
  2399  000E92  26D9               	addwf	fsr2l,f,c
  2400  000E94  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2401  000E96  22DA               	addwfc	fsr2h,f,c
  2402  000E98  50DF               	movf	indf2,w,c
  2403  000E9A  B4D8               	btfsc	status,2,c
  2404  000E9C  EF52  F007         	goto	u1061
  2405  000EA0  EF54  F007         	goto	u1060
  2406  000EA4                     u1061:
  2407  000EA4  EF72  F007         	goto	l1399
  2408  000EA8                     u1060:
  2409  000EA8  EE20 F004          	lfsr	2,4
  2410  000EAC  5008               	movf	testa_ganhou@teste^0,w,c
  2411  000EAE  26D9               	addwf	fsr2l,f,c
  2412  000EB0  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2413  000EB2  22DA               	addwfc	fsr2h,f,c
  2414  000EB4  50DF               	movf	indf2,w,c
  2415  000EB6  B4D8               	btfsc	status,2,c
  2416  000EB8  EF60  F007         	goto	u1071
  2417  000EBC  EF62  F007         	goto	u1070
  2418  000EC0                     u1071:
  2419  000EC0  EF72  F007         	goto	l1399
  2420  000EC4                     u1070:
  2421  000EC4  EE20 F006          	lfsr	2,6
  2422  000EC8  5008               	movf	testa_ganhou@teste^0,w,c
  2423  000ECA  26D9               	addwf	fsr2l,f,c
  2424  000ECC  5009               	movf	(testa_ganhou@teste+1)^0,w,c
  2425  000ECE  22DA               	addwfc	fsr2h,f,c
  2426  000ED0  50DF               	movf	indf2,w,c
  2427  000ED2  B4D8               	btfsc	status,2,c
  2428  000ED4  EF6E  F007         	goto	u1081
  2429  000ED8  EF70  F007         	goto	u1080
  2430  000EDC                     u1081:
  2431  000EDC  EF72  F007         	goto	l1399
  2432  000EE0                     u1080:
  2433  000EE0  EF3F  F006         	goto	l1325
  2434  000EE4                     l1399:
  2435                           
  2436                           ;main.c: 119:         for(j = 0; j < 3; j++)
  2437  000EE4  0E00               	movlw	0
  2438  000EE6                     l64:
  2439  000EE6  0012               	return		;funcret
  2440  000EE8                     __end_of_testa_ganhou:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _limpa_matriz *****************
  2444 ;; Defined at:
  2445 ;;		line 144 in file "main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  matriz          2    7[COMRAM] PTR unsigned char [3]
  2448 ;;		 -> main@marcados(9), verde(9), cursor(9), vermelho(9), 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  j               1   12[COMRAM] unsigned char 
  2451 ;;  i               1   11[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2461 ;;      Params:         2       0       0       0       0       0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0
  2463 ;;      Temps:          2       0       0       0       0       0       0
  2464 ;;      Totals:         6       0       0       0       0       0       0
  2465 ;;Total ram usage:        6 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text3
  2476  00136E                     __ptext3:
  2477                           	callstack 0
  2478  00136E                     _limpa_matriz:
  2479                           	callstack 29
  2480  00136E                     
  2481                           ;main.c: 144:     unsigned char i, j, MOVE_Old, SEL_Old, pontuacao_vermelho, pontuacao_v
      +                          erde, marcados[3][3], aux;;main.c: 145:     signed char posicao;;main.c: 146:     conf_i
      +                          nterrupt();;main.c: 148: 
  2482  00136E  0E00               	movlw	0
  2483  001370  6E0C               	movwf	limpa_matriz@i^0,c
  2484  001372                     l1443:
  2485                           
  2486                           ;main.c: 149:     limpa_matriz(verde);;main.c: 150:     limpa_matriz(vermelho);
  2487  001372  0E00               	movlw	0
  2488  001374  6E0D               	movwf	limpa_matriz@j^0,c
  2489  001376                     l1449:
  2490                           
  2491                           ;main.c: 151:     limpa_matriz(cursor);
  2492  001376  500C               	movf	limpa_matriz@i^0,w,c
  2493  001378  0D03               	mullw	3
  2494  00137A  C008  F00A         	movff	limpa_matriz@matriz,??_limpa_matriz
  2495  00137E  C009  F00B         	movff	limpa_matriz@matriz+1,??_limpa_matriz+1
  2496  001382  50F3               	movf	243,w,c
  2497  001384  260A               	addwf	??_limpa_matriz^0,f,c
  2498  001386  50F4               	movf	244,w,c
  2499  001388  220B               	addwfc	(??_limpa_matriz+1)^0,f,c
  2500  00138A  500D               	movf	limpa_matriz@j^0,w,c
  2501  00138C  240A               	addwf	??_limpa_matriz^0,w,c
  2502  00138E  6ED9               	movwf	fsr2l,c
  2503  001390  0E00               	movlw	0
  2504  001392  200B               	addwfc	(??_limpa_matriz+1)^0,w,c
  2505  001394  6EDA               	movwf	fsr2h,c
  2506  001396  0E00               	movlw	0
  2507  001398  6EDF               	movwf	indf2,c
  2508  00139A  2A0D               	incf	limpa_matriz@j^0,f,c
  2509  00139C  0E02               	movlw	2
  2510  00139E  640D               	cpfsgt	limpa_matriz@j^0,c
  2511  0013A0  EFD4  F009         	goto	u1121
  2512  0013A4  EFD6  F009         	goto	u1120
  2513  0013A8                     u1121:
  2514  0013A8  EFBB  F009         	goto	l1449
  2515  0013AC                     u1120:
  2516  0013AC                     
  2517                           ;main.c: 152:     limpa_matriz(marcados);
  2518  0013AC  2A0C               	incf	limpa_matriz@i^0,f,c
  2519  0013AE  0E02               	movlw	2
  2520  0013B0  640C               	cpfsgt	limpa_matriz@i^0,c
  2521  0013B2  EFDD  F009         	goto	u1131
  2522  0013B6  EFDF  F009         	goto	u1130
  2523  0013BA                     u1131:
  2524  0013BA  EFB9  F009         	goto	l1443
  2525  0013BE                     u1130:
  2526  0013BE  0012               	return		;funcret
  2527  0013C0                     __end_of_limpa_matriz:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _conf_interrupt *****************
  2531 ;; Defined at:
  2532 ;;		line 80 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2546 ;;      Params:         0       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 1
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text4
  2561  0013E6                     __ptext4:
  2562                           	callstack 0
  2563  0013E6                     _conf_interrupt:
  2564                           	callstack 29
  2565  0013E6                     
  2566                           ;main.c: 81: {
  2567  0013E6  92F2               	bcf	242,1,c	;volatile
  2568                           
  2569                           ;main.c: 82: 
  2570  0013E8  88F2               	bsf	242,4,c	;volatile
  2571                           
  2572                           ;main.c: 84:         return 1;
  2573  0013EA  8CD5               	bsf	213,6,c	;volatile
  2574                           
  2575                           ;main.c: 85:     if(teste[0][1] && teste[1][1] && teste[2][1])
  2576  0013EC  9AD5               	bcf	213,5,c	;volatile
  2577                           
  2578                           ;main.c: 86:         return 1;
  2579  0013EE  96D5               	bcf	213,3,c	;volatile
  2580  0013F0                     
  2581                           ;main.c: 87:     if(teste[0][2] && teste[1][2] && teste[2][2])
  2582  0013F0  50D5               	movf	213,w,c	;volatile
  2583  0013F2  0BF8               	andlw	-8
  2584  0013F4  0904               	iorlw	4
  2585  0013F6  6ED5               	movwf	213,c	;volatile
  2586  0013F8                     
  2587                           ;main.c: 88:         return 1;
  2588  0013F8  8ED5               	bsf	213,7,c	;volatile
  2589                           
  2590                           ;main.c: 90: 
  2591  0013FA  0E0F               	movlw	15
  2592  0013FC  6EC1               	movwf	193,c	;volatile
  2593  0013FE  0012               	return		;funcret
  2594  001400                     __end_of_conf_interrupt:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function ___wmul *****************
  2598 ;; Defined at:
  2599 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  multiplier      2   15[COMRAM] unsigned int 
  2602 ;;  multiplicand    2   17[COMRAM] unsigned int 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  product         2   19[COMRAM] unsigned int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2   15[COMRAM] unsigned int 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, prodl, prodh
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         4       0       0       0       0       0       0
  2615 ;;      Locals:         2       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0
  2617 ;;      Totals:         6       0       0       0       0       0       0
  2618 ;;Total ram usage:        6 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text5
  2629  0013C0                     __ptext5:
  2630                           	callstack 0
  2631  0013C0                     ___wmul:
  2632                           	callstack 29
  2633  0013C0  5010               	movf	___wmul@multiplier^0,w,c
  2634  0013C2  0212               	mulwf	___wmul@multiplicand^0,c
  2635  0013C4  CFF3 F014          	movff	prodl,___wmul@product
  2636  0013C8  CFF4 F015          	movff	prodh,___wmul@product+1
  2637  0013CC  5010               	movf	___wmul@multiplier^0,w,c
  2638  0013CE  0213               	mulwf	(___wmul@multiplicand+1)^0,c
  2639  0013D0  50F3               	movf	243,w,c
  2640  0013D2  2615               	addwf	(___wmul@product+1)^0,f,c
  2641  0013D4  5011               	movf	(___wmul@multiplier+1)^0,w,c
  2642  0013D6  0212               	mulwf	___wmul@multiplicand^0,c
  2643  0013D8  50F3               	movf	243,w,c
  2644  0013DA  2615               	addwf	(___wmul@product+1)^0,f,c
  2645  0013DC  C014  F010         	movff	___wmul@product,?___wmul
  2646  0013E0  C015  F011         	movff	___wmul@product+1,?___wmul+1
  2647  0013E4  0012               	return		;funcret
  2648  0013E6                     __end_of___wmul:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function ___awmod *****************
  2652 ;; Defined at:
  2653 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awmod.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  dividend        2    7[COMRAM] int 
  2656 ;;  divisor         2    9[COMRAM] int 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  sign            1   12[COMRAM] unsigned char 
  2659 ;;  counter         1   11[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2    7[COMRAM] int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2669 ;;      Params:         4       0       0       0       0       0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0
  2672 ;;      Totals:         6       0       0       0       0       0       0
  2673 ;;Total ram usage:        6 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text6
  2684  001228                     __ptext6:
  2685                           	callstack 0
  2686  001228                     ___awmod:
  2687                           	callstack 29
  2688  001228  0E00               	movlw	0
  2689  00122A  6E0D               	movwf	___awmod@sign^0,c
  2690  00122C  BE09               	btfsc	(___awmod@dividend+1)^0,7,c
  2691  00122E  EF1D  F009         	goto	u1200
  2692  001232  EF1B  F009         	goto	u1201
  2693  001236                     u1201:
  2694  001236  EF23  F009         	goto	l1517
  2695  00123A                     u1200:
  2696  00123A  6C08               	negf	___awmod@dividend^0,c
  2697  00123C  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2698  00123E  B0D8               	btfsc	status,0,c
  2699  001240  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2700  001242  0E01               	movlw	1
  2701  001244  6E0D               	movwf	___awmod@sign^0,c
  2702  001246                     l1517:
  2703  001246  BE0B               	btfsc	(___awmod@divisor+1)^0,7,c
  2704  001248  EF2A  F009         	goto	u1210
  2705  00124C  EF28  F009         	goto	u1211
  2706  001250                     u1211:
  2707  001250  EF2E  F009         	goto	l1521
  2708  001254                     u1210:
  2709  001254  6C0A               	negf	___awmod@divisor^0,c
  2710  001256  1E0B               	comf	(___awmod@divisor+1)^0,f,c
  2711  001258  B0D8               	btfsc	status,0,c
  2712  00125A  2A0B               	incf	(___awmod@divisor+1)^0,f,c
  2713  00125C                     l1521:
  2714  00125C  500A               	movf	___awmod@divisor^0,w,c
  2715  00125E  100B               	iorwf	(___awmod@divisor+1)^0,w,c
  2716  001260  B4D8               	btfsc	status,2,c
  2717  001262  EF35  F009         	goto	u1221
  2718  001266  EF37  F009         	goto	u1220
  2719  00126A                     u1221:
  2720  00126A  EF5B  F009         	goto	l1537
  2721  00126E                     u1220:
  2722  00126E  0E01               	movlw	1
  2723  001270  6E0C               	movwf	___awmod@counter^0,c
  2724  001272  EF3F  F009         	goto	l1527
  2725  001276                     l1525:
  2726  001276  90D8               	bcf	status,0,c
  2727  001278  360A               	rlcf	___awmod@divisor^0,f,c
  2728  00127A  360B               	rlcf	(___awmod@divisor+1)^0,f,c
  2729  00127C  2A0C               	incf	___awmod@counter^0,f,c
  2730  00127E                     l1527:
  2731  00127E  AE0B               	btfss	(___awmod@divisor+1)^0,7,c
  2732  001280  EF44  F009         	goto	u1231
  2733  001284  EF46  F009         	goto	u1230
  2734  001288                     u1231:
  2735  001288  EF3B  F009         	goto	l1525
  2736  00128C                     u1230:
  2737  00128C                     l1529:
  2738  00128C  500A               	movf	___awmod@divisor^0,w,c
  2739  00128E  5C08               	subwf	___awmod@dividend^0,w,c
  2740  001290  500B               	movf	(___awmod@divisor+1)^0,w,c
  2741  001292  5809               	subwfb	(___awmod@dividend+1)^0,w,c
  2742  001294  A0D8               	btfss	status,0,c
  2743  001296  EF4F  F009         	goto	u1241
  2744  00129A  EF51  F009         	goto	u1240
  2745  00129E                     u1241:
  2746  00129E  EF55  F009         	goto	l1533
  2747  0012A2                     u1240:
  2748  0012A2  500A               	movf	___awmod@divisor^0,w,c
  2749  0012A4  5E08               	subwf	___awmod@dividend^0,f,c
  2750  0012A6  500B               	movf	(___awmod@divisor+1)^0,w,c
  2751  0012A8  5A09               	subwfb	(___awmod@dividend+1)^0,f,c
  2752  0012AA                     l1533:
  2753  0012AA  90D8               	bcf	status,0,c
  2754  0012AC  320B               	rrcf	(___awmod@divisor+1)^0,f,c
  2755  0012AE  320A               	rrcf	___awmod@divisor^0,f,c
  2756  0012B0  2E0C               	decfsz	___awmod@counter^0,f,c
  2757  0012B2  EF46  F009         	goto	l1529
  2758  0012B6                     l1537:
  2759  0012B6  500D               	movf	___awmod@sign^0,w,c
  2760  0012B8  B4D8               	btfsc	status,2,c
  2761  0012BA  EF61  F009         	goto	u1251
  2762  0012BE  EF63  F009         	goto	u1250
  2763  0012C2                     u1251:
  2764  0012C2  EF67  F009         	goto	l1541
  2765  0012C6                     u1250:
  2766  0012C6  6C08               	negf	___awmod@dividend^0,c
  2767  0012C8  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2768  0012CA  B0D8               	btfsc	status,0,c
  2769  0012CC  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2770  0012CE                     l1541:
  2771  0012CE  C008  F008         	movff	___awmod@dividend,?___awmod
  2772  0012D2  C009  F009         	movff	___awmod@dividend+1,?___awmod+1
  2773  0012D6  0012               	return		;funcret
  2774  0012D8                     __end_of___awmod:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function ___awdiv *****************
  2778 ;; Defined at:
  2779 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  dividend        2    7[COMRAM] int 
  2782 ;;  divisor         2    9[COMRAM] int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  quotient        2   13[COMRAM] int 
  2785 ;;  sign            1   12[COMRAM] unsigned char 
  2786 ;;  counter         1   11[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    7[COMRAM] int 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2796 ;;      Params:         4       0       0       0       0       0       0
  2797 ;;      Locals:         4       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0
  2799 ;;      Totals:         8       0       0       0       0       0       0
  2800 ;;Total ram usage:        8 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text7
  2811  001164                     __ptext7:
  2812                           	callstack 0
  2813  001164                     ___awdiv:
  2814                           	callstack 29
  2815  001164  0E00               	movlw	0
  2816  001166  6E0D               	movwf	___awdiv@sign^0,c
  2817  001168  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  2818  00116A  EFBB  F008         	goto	u1140
  2819  00116E  EFB9  F008         	goto	u1141
  2820  001172                     u1141:
  2821  001172  EFC1  F008         	goto	l1473
  2822  001176                     u1140:
  2823  001176  6C0A               	negf	___awdiv@divisor^0,c
  2824  001178  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  2825  00117A  B0D8               	btfsc	status,0,c
  2826  00117C  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  2827  00117E  0E01               	movlw	1
  2828  001180  6E0D               	movwf	___awdiv@sign^0,c
  2829  001182                     l1473:
  2830  001182  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  2831  001184  EFC8  F008         	goto	u1150
  2832  001188  EFC6  F008         	goto	u1151
  2833  00118C                     u1151:
  2834  00118C  EFCE  F008         	goto	l1479
  2835  001190                     u1150:
  2836  001190  6C08               	negf	___awdiv@dividend^0,c
  2837  001192  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  2838  001194  B0D8               	btfsc	status,0,c
  2839  001196  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  2840  001198  0E01               	movlw	1
  2841  00119A  1A0D               	xorwf	___awdiv@sign^0,f,c
  2842  00119C                     l1479:
  2843  00119C  0E00               	movlw	0
  2844  00119E  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  2845  0011A0  0E00               	movlw	0
  2846  0011A2  6E0E               	movwf	___awdiv@quotient^0,c
  2847  0011A4  500A               	movf	___awdiv@divisor^0,w,c
  2848  0011A6  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  2849  0011A8  B4D8               	btfsc	status,2,c
  2850  0011AA  EFD9  F008         	goto	u1161
  2851  0011AE  EFDB  F008         	goto	u1160
  2852  0011B2                     u1161:
  2853  0011B2  EF03  F009         	goto	l1501
  2854  0011B6                     u1160:
  2855  0011B6  0E01               	movlw	1
  2856  0011B8  6E0C               	movwf	___awdiv@counter^0,c
  2857  0011BA  EFE3  F008         	goto	l1487
  2858  0011BE                     l1485:
  2859  0011BE  90D8               	bcf	status,0,c
  2860  0011C0  360A               	rlcf	___awdiv@divisor^0,f,c
  2861  0011C2  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  2862  0011C4  2A0C               	incf	___awdiv@counter^0,f,c
  2863  0011C6                     l1487:
  2864  0011C6  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  2865  0011C8  EFE8  F008         	goto	u1171
  2866  0011CC  EFEA  F008         	goto	u1170
  2867  0011D0                     u1171:
  2868  0011D0  EFDF  F008         	goto	l1485
  2869  0011D4                     u1170:
  2870  0011D4                     l1489:
  2871  0011D4  90D8               	bcf	status,0,c
  2872  0011D6  360E               	rlcf	___awdiv@quotient^0,f,c
  2873  0011D8  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  2874  0011DA  500A               	movf	___awdiv@divisor^0,w,c
  2875  0011DC  5C08               	subwf	___awdiv@dividend^0,w,c
  2876  0011DE  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2877  0011E0  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  2878  0011E2  A0D8               	btfss	status,0,c
  2879  0011E4  EFF6  F008         	goto	u1181
  2880  0011E8  EFF8  F008         	goto	u1180
  2881  0011EC                     u1181:
  2882  0011EC  EFFD  F008         	goto	l1497
  2883  0011F0                     u1180:
  2884  0011F0  500A               	movf	___awdiv@divisor^0,w,c
  2885  0011F2  5E08               	subwf	___awdiv@dividend^0,f,c
  2886  0011F4  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2887  0011F6  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  2888  0011F8  800E               	bsf	___awdiv@quotient^0,0,c
  2889  0011FA                     l1497:
  2890  0011FA  90D8               	bcf	status,0,c
  2891  0011FC  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  2892  0011FE  320A               	rrcf	___awdiv@divisor^0,f,c
  2893  001200  2E0C               	decfsz	___awdiv@counter^0,f,c
  2894  001202  EFEA  F008         	goto	l1489
  2895  001206                     l1501:
  2896  001206  500D               	movf	___awdiv@sign^0,w,c
  2897  001208  B4D8               	btfsc	status,2,c
  2898  00120A  EF09  F009         	goto	u1191
  2899  00120E  EF0B  F009         	goto	u1190
  2900  001212                     u1191:
  2901  001212  EF0F  F009         	goto	l1505
  2902  001216                     u1190:
  2903  001216  6C0E               	negf	___awdiv@quotient^0,c
  2904  001218  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  2905  00121A  B0D8               	btfsc	status,0,c
  2906  00121C  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  2907  00121E                     l1505:
  2908  00121E  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  2909  001222  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  2910  001226  0012               	return		;funcret
  2911  001228                     __end_of___awdiv:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _interrupt_PIC *****************
  2915 ;; Defined at:
  2916 ;;		line 25 in file "main.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          7       0       0       0       0       0       0
  2933 ;;      Totals:         7       0       0       0       0       0       0
  2934 ;;Total ram usage:        7 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		Interrupt level 2
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	intcode
  2944  000008                     __pintcode:
  2945                           	callstack 0
  2946  000008                     _interrupt_PIC:
  2947                           	callstack 29
  2948                           
  2949                           ;incstack = 0
  2950  000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2951  00000A  ED74  F007         	call	int_func,f	;refresh shadow registers
  2952                           
  2953                           	psect	intcode_body
  2954  000EE8                     __pintcode_body:
  2955                           	callstack 29
  2956  000EE8                     int_func:
  2957                           	callstack 29
  2958  000EE8  0006               	pop		; remove dummy address from shadow register refresh
  2959  000EEA  CFD9 F004          	movff	fsr2l,??_interrupt_PIC+3
  2960  000EEE  CFDA F005          	movff	fsr2h,??_interrupt_PIC+4
  2961  000EF2  CFF3 F006          	movff	prodl,??_interrupt_PIC+5
  2962  000EF6  CFF4 F007          	movff	prodh,??_interrupt_PIC+6
  2963  000EFA                     
  2964                           ;main.c: 30:         }
  2965  000EFA  A4F2               	btfss	242,2,c	;volatile
  2966  000EFC  EF82  F007         	goto	i2u42_41
  2967  000F00  EF84  F007         	goto	i2u42_40
  2968  000F04                     i2u42_41:
  2969  000F04  EFA8  F008         	goto	i2l57
  2970  000F08                     i2u42_40:
  2971  000F08                     
  2972                           ;main.c: 31:         else if(linha == 2){;main.c: 33:             PORTBbits.RB1 = 0x01;
  2973  000F08  0E00               	movlw	0
  2974  000F0A  6E83               	movwf	131,c	;volatile
  2975                           
  2976                           ;main.c: 35:         }
  2977  000F0C  502E               	movf	_linha^0,w,c
  2978  000F0E  A4D8               	btfss	status,2,c
  2979  000F10  EF8C  F007         	goto	i2u43_41
  2980  000F14  EF8E  F007         	goto	i2u43_40
  2981  000F18                     i2u43_41:
  2982  000F18  EF93  F007         	goto	i2l1043
  2983  000F1C                     i2u43_40:
  2984  000F1C                     
  2985                           ;main.c: 36: 
  2986  000F1C  9081               	bcf	129,0,c	;volatile
  2987                           
  2988                           ;main.c: 37: 
  2989  000F1E  8281               	bsf	129,1,c	;volatile
  2990                           
  2991                           ;main.c: 38:         PORTDbits.RD0 = vermelho[linha][0] | (cursor[linha][0] & pisca & co
      +                          r);
  2992  000F20  8481               	bsf	129,2,c	;volatile
  2993                           
  2994                           ;main.c: 39:         PORTDbits.RD1 = vermelho[linha][1] | (cursor[linha][1] & pisca & co
      +                          r);
  2995  000F22  EFAC  F007         	goto	i2l1051
  2996  000F26                     i2l1043:
  2997  000F26  042E               	decf	_linha^0,w,c
  2998  000F28  A4D8               	btfss	status,2,c
  2999  000F2A  EF99  F007         	goto	i2u44_41
  3000  000F2E  EF9B  F007         	goto	i2u44_40
  3001  000F32                     i2u44_41:
  3002  000F32  EFA0  F007         	goto	i2l1047
  3003  000F36                     i2u44_40:
  3004  000F36                     
  3005                           ;main.c: 41:         PORTDbits.RD3 = verde[linha][0] | (cursor[linha][0] & pisca & !cor)
      +                          ;
  3006  000F36  8081               	bsf	129,0,c	;volatile
  3007                           
  3008                           ;main.c: 42:         PORTDbits.RD4 = verde[linha][1] | (cursor[linha][1] & pisca & !cor)
      +                          ;
  3009  000F38  9281               	bcf	129,1,c	;volatile
  3010                           
  3011                           ;main.c: 43:         PORTDbits.RD5 = verde[linha][2] | (cursor[linha][2] & pisca & !cor)
      +                          ;
  3012  000F3A  8481               	bsf	129,2,c	;volatile
  3013                           
  3014                           ;main.c: 44: 
  3015  000F3C  EFAC  F007         	goto	i2l1051
  3016  000F40                     i2l1047:
  3017  000F40  0E02               	movlw	2
  3018  000F42  182E               	xorwf	_linha^0,w,c
  3019  000F44  A4D8               	btfss	status,2,c
  3020  000F46  EFA7  F007         	goto	i2u45_41
  3021  000F4A  EFA9  F007         	goto	i2u45_40
  3022  000F4E                     i2u45_41:
  3023  000F4E  EFAC  F007         	goto	i2l1051
  3024  000F52                     i2u45_40:
  3025  000F52                     
  3026                           ;main.c: 46: 
  3027  000F52  8081               	bsf	129,0,c	;volatile
  3028                           
  3029                           ;main.c: 47:         linha++;
  3030  000F54  8281               	bsf	129,1,c	;volatile
  3031                           
  3032                           ;main.c: 48:         if(linha == 3)
  3033  000F56  9481               	bcf	129,2,c	;volatile
  3034  000F58                     i2l1051:
  3035                           
  3036                           ;main.c: 52: 
  3037  000F58  502E               	movf	_linha^0,w,c
  3038  000F5A  0D03               	mullw	3
  3039  000F5C  0E38               	movlw	low _vermelho
  3040  000F5E  24F3               	addwf	243,w,c
  3041  000F60  6ED9               	movwf	fsr2l,c
  3042  000F62  0E00               	movlw	high _vermelho
  3043  000F64  20F4               	addwfc	prodh,w,c
  3044  000F66  6EDA               	movwf	fsr2h,c
  3045  000F68  50DF               	movf	indf2,w,c
  3046  000F6A  6E01               	movwf	??_interrupt_PIC^0,c
  3047  000F6C  502E               	movf	_linha^0,w,c
  3048  000F6E  0D03               	mullw	3
  3049  000F70  0E2F               	movlw	low _cursor
  3050  000F72  24F3               	addwf	243,w,c
  3051  000F74  6ED9               	movwf	fsr2l,c
  3052  000F76  0E00               	movlw	high _cursor
  3053  000F78  20F4               	addwfc	prodh,w,c
  3054  000F7A  6EDA               	movwf	fsr2h,c
  3055  000F7C  50DF               	movf	indf2,w,c
  3056  000F7E  1429               	andwf	_pisca^0,w,c
  3057  000F80  142C               	andwf	_cor^0,w,c
  3058  000F82  1001               	iorwf	??_interrupt_PIC^0,w,c
  3059  000F84  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3060  000F86  5083               	movf	131,w,c	;volatile
  3061  000F88  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3062  000F8A  0BFE               	andlw	-2
  3063  000F8C  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3064  000F8E  6E83               	movwf	131,c	;volatile
  3065                           
  3066                           ;main.c: 53:         conta++;
  3067  000F90  502E               	movf	_linha^0,w,c
  3068  000F92  0D03               	mullw	3
  3069  000F94  0E39               	movlw	low (_vermelho+1)
  3070  000F96  24F3               	addwf	243,w,c
  3071  000F98  6ED9               	movwf	fsr2l,c
  3072  000F9A  0E00               	movlw	high (_vermelho+1)
  3073  000F9C  20F4               	addwfc	prodh,w,c
  3074  000F9E  6EDA               	movwf	fsr2h,c
  3075  000FA0  50DF               	movf	indf2,w,c
  3076  000FA2  6E01               	movwf	??_interrupt_PIC^0,c
  3077  000FA4  502E               	movf	_linha^0,w,c
  3078  000FA6  0D03               	mullw	3
  3079  000FA8  0E30               	movlw	low (_cursor+1)
  3080  000FAA  24F3               	addwf	243,w,c
  3081  000FAC  6ED9               	movwf	fsr2l,c
  3082  000FAE  0E00               	movlw	high (_cursor+1)
  3083  000FB0  20F4               	addwfc	prodh,w,c
  3084  000FB2  6EDA               	movwf	fsr2h,c
  3085  000FB4  50DF               	movf	indf2,w,c
  3086  000FB6  1429               	andwf	_pisca^0,w,c
  3087  000FB8  142C               	andwf	_cor^0,w,c
  3088  000FBA  1001               	iorwf	??_interrupt_PIC^0,w,c
  3089  000FBC  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3090  000FBE  4602               	rlncf	(??_interrupt_PIC+1)^0,f,c
  3091  000FC0  5083               	movf	131,w,c	;volatile
  3092  000FC2  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3093  000FC4  0BFD               	andlw	-3
  3094  000FC6  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3095  000FC8  6E83               	movwf	131,c	;volatile
  3096                           
  3097                           ;main.c: 54:         if(conta == 100)
  3098  000FCA  502E               	movf	_linha^0,w,c
  3099  000FCC  0D03               	mullw	3
  3100  000FCE  0E3A               	movlw	low (_vermelho+2)
  3101  000FD0  24F3               	addwf	243,w,c
  3102  000FD2  6ED9               	movwf	fsr2l,c
  3103  000FD4  0E00               	movlw	high (_vermelho+2)
  3104  000FD6  20F4               	addwfc	prodh,w,c
  3105  000FD8  6EDA               	movwf	fsr2h,c
  3106  000FDA  50DF               	movf	indf2,w,c
  3107  000FDC  6E01               	movwf	??_interrupt_PIC^0,c
  3108  000FDE  502E               	movf	_linha^0,w,c
  3109  000FE0  0D03               	mullw	3
  3110  000FE2  0E31               	movlw	low (_cursor+2)
  3111  000FE4  24F3               	addwf	243,w,c
  3112  000FE6  6ED9               	movwf	fsr2l,c
  3113  000FE8  0E00               	movlw	high (_cursor+2)
  3114  000FEA  20F4               	addwfc	prodh,w,c
  3115  000FEC  6EDA               	movwf	fsr2h,c
  3116  000FEE  50DF               	movf	indf2,w,c
  3117  000FF0  1429               	andwf	_pisca^0,w,c
  3118  000FF2  142C               	andwf	_cor^0,w,c
  3119  000FF4  1001               	iorwf	??_interrupt_PIC^0,w,c
  3120  000FF6  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3121  000FF8  4602               	rlncf	(??_interrupt_PIC+1)^0,f,c
  3122  000FFA  4602               	rlncf	(??_interrupt_PIC+1)^0,f,c
  3123  000FFC  5083               	movf	131,w,c	;volatile
  3124  000FFE  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3125  001000  0BFB               	andlw	-5
  3126  001002  1802               	xorwf	(??_interrupt_PIC+1)^0,w,c
  3127  001004  6E83               	movwf	131,c	;volatile
  3128                           
  3129                           ;main.c: 55:         {
  3130  001006  502E               	movf	_linha^0,w,c
  3131  001008  0D03               	mullw	3
  3132  00100A  0E41               	movlw	low _verde
  3133  00100C  24F3               	addwf	243,w,c
  3134  00100E  6ED9               	movwf	fsr2l,c
  3135  001010  0E00               	movlw	high _verde
  3136  001012  20F4               	addwfc	prodh,w,c
  3137  001014  6EDA               	movwf	fsr2h,c
  3138  001016  50DF               	movf	indf2,w,c
  3139  001018  6E01               	movwf	??_interrupt_PIC^0,c
  3140  00101A  502E               	movf	_linha^0,w,c
  3141  00101C  0D03               	mullw	3
  3142  00101E  0E2F               	movlw	low _cursor
  3143  001020  24F3               	addwf	243,w,c
  3144  001022  6ED9               	movwf	fsr2l,c
  3145  001024  0E00               	movlw	high _cursor
  3146  001026  20F4               	addwfc	prodh,w,c
  3147  001028  6EDA               	movwf	fsr2h,c
  3148  00102A  50DF               	movf	indf2,w,c
  3149  00102C  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3150  00102E  502C               	movf	_cor^0,w,c
  3151  001030  B4D8               	btfsc	status,2,c
  3152  001032  EF1D  F008         	goto	i2u46_41
  3153  001036  EF20  F008         	goto	i2u46_40
  3154  00103A                     i2u46_41:
  3155  00103A  0E01               	movlw	1
  3156  00103C  EF21  F008         	goto	i2u47_40
  3157  001040                     i2u46_40:
  3158  001040  0E00               	movlw	0
  3159  001042                     i2u47_40:
  3160  001042  1402               	andwf	(??_interrupt_PIC+1)^0,w,c
  3161  001044  1429               	andwf	_pisca^0,w,c
  3162  001046  1001               	iorwf	??_interrupt_PIC^0,w,c
  3163  001048  6E03               	movwf	(??_interrupt_PIC+2)^0,c
  3164  00104A  4603               	rlncf	(??_interrupt_PIC+2)^0,f,c
  3165  00104C  4603               	rlncf	(??_interrupt_PIC+2)^0,f,c
  3166  00104E  4603               	rlncf	(??_interrupt_PIC+2)^0,f,c
  3167  001050  5083               	movf	131,w,c	;volatile
  3168  001052  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3169  001054  0BF7               	andlw	-9
  3170  001056  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3171  001058  6E83               	movwf	131,c	;volatile
  3172                           
  3173                           ;main.c: 56:             conta = 0;
  3174  00105A  502E               	movf	_linha^0,w,c
  3175  00105C  0D03               	mullw	3
  3176  00105E  0E42               	movlw	low (_verde+1)
  3177  001060  24F3               	addwf	243,w,c
  3178  001062  6ED9               	movwf	fsr2l,c
  3179  001064  0E00               	movlw	high (_verde+1)
  3180  001066  20F4               	addwfc	prodh,w,c
  3181  001068  6EDA               	movwf	fsr2h,c
  3182  00106A  50DF               	movf	indf2,w,c
  3183  00106C  6E01               	movwf	??_interrupt_PIC^0,c
  3184  00106E  502E               	movf	_linha^0,w,c
  3185  001070  0D03               	mullw	3
  3186  001072  0E30               	movlw	low (_cursor+1)
  3187  001074  24F3               	addwf	243,w,c
  3188  001076  6ED9               	movwf	fsr2l,c
  3189  001078  0E00               	movlw	high (_cursor+1)
  3190  00107A  20F4               	addwfc	prodh,w,c
  3191  00107C  6EDA               	movwf	fsr2h,c
  3192  00107E  50DF               	movf	indf2,w,c
  3193  001080  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3194  001082  502C               	movf	_cor^0,w,c
  3195  001084  B4D8               	btfsc	status,2,c
  3196  001086  EF47  F008         	goto	i2u48_41
  3197  00108A  EF4A  F008         	goto	i2u48_40
  3198  00108E                     i2u48_41:
  3199  00108E  0E01               	movlw	1
  3200  001090  EF4B  F008         	goto	i2u49_40
  3201  001094                     i2u48_40:
  3202  001094  0E00               	movlw	0
  3203  001096                     i2u49_40:
  3204  001096  1402               	andwf	(??_interrupt_PIC+1)^0,w,c
  3205  001098  1429               	andwf	_pisca^0,w,c
  3206  00109A  1001               	iorwf	??_interrupt_PIC^0,w,c
  3207  00109C  6E03               	movwf	(??_interrupt_PIC+2)^0,c
  3208  00109E  3A03               	swapf	(??_interrupt_PIC+2)^0,f,c
  3209  0010A0  5083               	movf	131,w,c	;volatile
  3210  0010A2  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3211  0010A4  0BEF               	andlw	-17
  3212  0010A6  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3213  0010A8  6E83               	movwf	131,c	;volatile
  3214                           
  3215                           ;main.c: 57:             pisca = !pisca;
  3216  0010AA  502E               	movf	_linha^0,w,c
  3217  0010AC  0D03               	mullw	3
  3218  0010AE  0E43               	movlw	low (_verde+2)
  3219  0010B0  24F3               	addwf	243,w,c
  3220  0010B2  6ED9               	movwf	fsr2l,c
  3221  0010B4  0E00               	movlw	high (_verde+2)
  3222  0010B6  20F4               	addwfc	prodh,w,c
  3223  0010B8  6EDA               	movwf	fsr2h,c
  3224  0010BA  50DF               	movf	indf2,w,c
  3225  0010BC  6E01               	movwf	??_interrupt_PIC^0,c
  3226  0010BE  502E               	movf	_linha^0,w,c
  3227  0010C0  0D03               	mullw	3
  3228  0010C2  0E31               	movlw	low (_cursor+2)
  3229  0010C4  24F3               	addwf	243,w,c
  3230  0010C6  6ED9               	movwf	fsr2l,c
  3231  0010C8  0E00               	movlw	high (_cursor+2)
  3232  0010CA  20F4               	addwfc	prodh,w,c
  3233  0010CC  6EDA               	movwf	fsr2h,c
  3234  0010CE  50DF               	movf	indf2,w,c
  3235  0010D0  6E02               	movwf	(??_interrupt_PIC+1)^0,c
  3236  0010D2  502C               	movf	_cor^0,w,c
  3237  0010D4  B4D8               	btfsc	status,2,c
  3238  0010D6  EF6F  F008         	goto	i2u50_41
  3239  0010DA  EF72  F008         	goto	i2u50_40
  3240  0010DE                     i2u50_41:
  3241  0010DE  0E01               	movlw	1
  3242  0010E0  EF73  F008         	goto	i2u51_40
  3243  0010E4                     i2u50_40:
  3244  0010E4  0E00               	movlw	0
  3245  0010E6                     i2u51_40:
  3246  0010E6  1402               	andwf	(??_interrupt_PIC+1)^0,w,c
  3247  0010E8  1429               	andwf	_pisca^0,w,c
  3248  0010EA  1001               	iorwf	??_interrupt_PIC^0,w,c
  3249  0010EC  6E03               	movwf	(??_interrupt_PIC+2)^0,c
  3250  0010EE  3A03               	swapf	(??_interrupt_PIC+2)^0,f,c
  3251  0010F0  4603               	rlncf	(??_interrupt_PIC+2)^0,f,c
  3252  0010F2  5083               	movf	131,w,c	;volatile
  3253  0010F4  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3254  0010F6  0BDF               	andlw	-33
  3255  0010F8  1803               	xorwf	(??_interrupt_PIC+2)^0,w,c
  3256  0010FA  6E83               	movwf	131,c	;volatile
  3257  0010FC                     
  3258                           ;main.c: 61:         TMR0L = 0;
  3259  0010FC  2A2E               	incf	_linha^0,f,c
  3260  0010FE                     
  3261                           ;main.c: 62:         INTCONbits.TMR0IF = 0;
  3262  0010FE  0E03               	movlw	3
  3263  001100  182E               	xorwf	_linha^0,w,c
  3264  001102  A4D8               	btfss	status,2,c
  3265  001104  EF86  F008         	goto	i2u52_41
  3266  001108  EF88  F008         	goto	i2u52_40
  3267  00110C                     i2u52_41:
  3268  00110C  EF8A  F008         	goto	i2l1059
  3269  001110                     i2u52_40:
  3270  001110                     
  3271                           ;main.c: 63:     }
  3272  001110  0E00               	movlw	0
  3273  001112  6E2E               	movwf	_linha^0,c
  3274  001114                     i2l1059:
  3275                           
  3276                           ;main.c: 67: INTCONbits.INT0IF = 0;
  3277  001114  2A2D               	incf	_conta^0,f,c
  3278  001116                     
  3279                           ;main.c: 68: INTCONbits.INT0IE = 1;
  3280  001116  0E64               	movlw	100
  3281  001118  182D               	xorwf	_conta^0,w,c
  3282  00111A  A4D8               	btfss	status,2,c
  3283  00111C  EF92  F008         	goto	i2u53_41
  3284  001120  EF94  F008         	goto	i2u53_40
  3285  001124                     i2u53_41:
  3286  001124  EFA3  F008         	goto	i2l1067
  3287  001128                     i2u53_40:
  3288  001128                     
  3289                           ;main.c: 69: ;main.c: 70: T0CONbits.T08BIT = 1;
  3290  001128  0E00               	movlw	0
  3291  00112A  6E2D               	movwf	_conta^0,c
  3292  00112C                     
  3293                           ;main.c: 71: T0CONbits.T0CS = 0;
  3294  00112C  5029               	movf	_pisca^0,w,c
  3295  00112E  102A               	iorwf	(_pisca+1)^0,w,c
  3296  001130  B4D8               	btfsc	status,2,c
  3297  001132  EF9D  F008         	goto	i2u54_41
  3298  001136  EFA0  F008         	goto	i2u54_40
  3299  00113A                     i2u54_41:
  3300  00113A  0E01               	movlw	1
  3301  00113C  EFA1  F008         	goto	i2u55_40
  3302  001140                     i2u54_40:
  3303  001140  0E00               	movlw	0
  3304  001142                     i2u55_40:
  3305  001142  6E29               	movwf	_pisca^0,c
  3306  001144  6A2A               	clrf	(_pisca+1)^0,c
  3307  001146                     i2l1067:
  3308                           
  3309                           ;main.c: 74: T0CONbits.TMR0ON = 1;
  3310  001146  0E00               	movlw	0
  3311  001148  6ED7               	movwf	215,c	;volatile
  3312  00114A                     
  3313                           ;main.c: 75: 
  3314  00114A  0E00               	movlw	0
  3315  00114C  6ED6               	movwf	214,c	;volatile
  3316  00114E                     
  3317                           ;main.c: 76: ADCON1 = 0x0F;
  3318  00114E  94F2               	bcf	242,2,c	;volatile
  3319  001150                     i2l57:
  3320  001150  C007  FFF4         	movff	??_interrupt_PIC+6,prodh
  3321  001154  C006  FFF3         	movff	??_interrupt_PIC+5,prodl
  3322  001158  C005  FFDA         	movff	??_interrupt_PIC+4,fsr2h
  3323  00115C  C004  FFD9         	movff	??_interrupt_PIC+3,fsr2l
  3324  001160  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3325  001162  0011               	retfie		f
  3326  001164                     __end_of_interrupt_PIC:
  3327                           	callstack 0
  3328  0000                     
  3329                           	psect	rparam
  3330  0000                     
  3331                           	psect	temp
  3332  00004A                     btemp:
  3333                           	callstack 0
  3334  00004A                     	ds	1
  3335  0000                     int$flags	set	btemp
  3336  0000                     wtemp8	set	btemp+1
  3337  0000                     ttemp5	set	btemp+1
  3338  0000                     ttemp6	set	btemp+4
  3339  0000                     ttemp7	set	btemp+8
  3340                           
  3341                           	psect	idloc
  3342                           
  3343                           ;Config register IDLOC0 @ 0x200000
  3344                           ;	unspecified, using default values
  3345  200000                     	org	2097152
  3346  200000  FF                 	db	255
  3347                           
  3348                           ;Config register IDLOC1 @ 0x200001
  3349                           ;	unspecified, using default values
  3350  200001                     	org	2097153
  3351  200001  FF                 	db	255
  3352                           
  3353                           ;Config register IDLOC2 @ 0x200002
  3354                           ;	unspecified, using default values
  3355  200002                     	org	2097154
  3356  200002  FF                 	db	255
  3357                           
  3358                           ;Config register IDLOC3 @ 0x200003
  3359                           ;	unspecified, using default values
  3360  200003                     	org	2097155
  3361  200003  FF                 	db	255
  3362                           
  3363                           ;Config register IDLOC4 @ 0x200004
  3364                           ;	unspecified, using default values
  3365  200004                     	org	2097156
  3366  200004  FF                 	db	255
  3367                           
  3368                           ;Config register IDLOC5 @ 0x200005
  3369                           ;	unspecified, using default values
  3370  200005                     	org	2097157
  3371  200005  FF                 	db	255
  3372                           
  3373                           ;Config register IDLOC6 @ 0x200006
  3374                           ;	unspecified, using default values
  3375  200006                     	org	2097158
  3376  200006  FF                 	db	255
  3377                           
  3378                           ;Config register IDLOC7 @ 0x200007
  3379                           ;	unspecified, using default values
  3380  200007                     	org	2097159
  3381  200007  FF                 	db	255
  3382                           
  3383                           	psect	config
  3384                           
  3385                           ; Padding undefined space
  3386  300000                     	org	3145728
  3387  300000  FF                 	db	255
  3388                           
  3389                           ;Config register CONFIG1H @ 0x300001
  3390                           ;	Oscillator Selection bits
  3391                           ;	OSC = HS, HS oscillator
  3392                           ;	Fail-Safe Clock Monitor Enable bit
  3393                           ;	FCMEN = 0x0, unprogrammed default
  3394                           ;	Internal/External Oscillator Switchover bit
  3395                           ;	IESO = 0x0, unprogrammed default
  3396  300001                     	org	3145729
  3397  300001  02                 	db	2
  3398                           
  3399                           ;Config register CONFIG2L @ 0x300002
  3400                           ;	Power-up Timer Enable bit
  3401                           ;	PWRT = 0x1, unprogrammed default
  3402                           ;	Brown-out Reset Enable bits
  3403                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3404                           ;	Brown Out Reset Voltage bits
  3405                           ;	BORV = 0x3, unprogrammed default
  3406  300002                     	org	3145730
  3407  300002  19                 	db	25
  3408                           
  3409                           ;Config register CONFIG2H @ 0x300003
  3410                           ;	Watchdog Timer Enable bit
  3411                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3412                           ;	Watchdog Timer Postscale Select bits
  3413                           ;	WDTPS = 0xF, unprogrammed default
  3414  300003                     	org	3145731
  3415  300003  1E                 	db	30
  3416                           
  3417                           ; Padding undefined space
  3418  300004                     	org	3145732
  3419  300004  FF                 	db	255
  3420                           
  3421                           ;Config register CONFIG3H @ 0x300005
  3422                           ;	unspecified, using default values
  3423                           ;	CCP2 MUX bit
  3424                           ;	CCP2MX = 0x1, unprogrammed default
  3425                           ;	PORTB A/D Enable bit
  3426                           ;	PBADEN = 0x1, unprogrammed default
  3427                           ;	Low-Power Timer1 Oscillator Enable bit
  3428                           ;	LPT1OSC = 0x0, unprogrammed default
  3429                           ;	MCLR Pin Enable bit
  3430                           ;	MCLRE = 0x1, unprogrammed default
  3431  300005                     	org	3145733
  3432  300005  83                 	db	131
  3433                           
  3434                           ;Config register CONFIG4L @ 0x300006
  3435                           ;	unspecified, using default values
  3436                           ;	Stack Full/Underflow Reset Enable bit
  3437                           ;	STVREN = 0x1, unprogrammed default
  3438                           ;	Single-Supply ICSP Enable bit
  3439                           ;	LVP = 0x1, unprogrammed default
  3440                           ;	Extended Instruction Set Enable bit
  3441                           ;	XINST = 0x0, unprogrammed default
  3442                           ;	Background Debugger Enable bit
  3443                           ;	DEBUG = 0x1, unprogrammed default
  3444  300006                     	org	3145734
  3445  300006  85                 	db	133
  3446                           
  3447                           ; Padding undefined space
  3448  300007                     	org	3145735
  3449  300007  FF                 	db	255
  3450                           
  3451                           ;Config register CONFIG5L @ 0x300008
  3452                           ;	unspecified, using default values
  3453                           ;	Code Protection bit
  3454                           ;	CP0 = 0x1, unprogrammed default
  3455                           ;	Code Protection bit
  3456                           ;	CP1 = 0x1, unprogrammed default
  3457                           ;	Code Protection bit
  3458                           ;	CP2 = 0x1, unprogrammed default
  3459                           ;	Code Protection bit
  3460                           ;	CP3 = 0x1, unprogrammed default
  3461  300008                     	org	3145736
  3462  300008  0F                 	db	15
  3463                           
  3464                           ;Config register CONFIG5H @ 0x300009
  3465                           ;	unspecified, using default values
  3466                           ;	Boot Block Code Protection bit
  3467                           ;	CPB = 0x1, unprogrammed default
  3468                           ;	Data EEPROM Code Protection bit
  3469                           ;	CPD = 0x1, unprogrammed default
  3470  300009                     	org	3145737
  3471  300009  C0                 	db	192
  3472                           
  3473                           ;Config register CONFIG6L @ 0x30000A
  3474                           ;	unspecified, using default values
  3475                           ;	Write Protection bit
  3476                           ;	WRT0 = 0x1, unprogrammed default
  3477                           ;	Write Protection bit
  3478                           ;	WRT1 = 0x1, unprogrammed default
  3479                           ;	Write Protection bit
  3480                           ;	WRT2 = 0x1, unprogrammed default
  3481                           ;	Write Protection bit
  3482                           ;	WRT3 = 0x1, unprogrammed default
  3483  30000A                     	org	3145738
  3484  30000A  0F                 	db	15
  3485                           
  3486                           ;Config register CONFIG6H @ 0x30000B
  3487                           ;	unspecified, using default values
  3488                           ;	Configuration Register Write Protection bit
  3489                           ;	WRTC = 0x1, unprogrammed default
  3490                           ;	Boot Block Write Protection bit
  3491                           ;	WRTB = 0x1, unprogrammed default
  3492                           ;	Data EEPROM Write Protection bit
  3493                           ;	WRTD = 0x1, unprogrammed default
  3494  30000B                     	org	3145739
  3495  30000B  E0                 	db	224
  3496                           
  3497                           ;Config register CONFIG7L @ 0x30000C
  3498                           ;	unspecified, using default values
  3499                           ;	Table Read Protection bit
  3500                           ;	EBTR0 = 0x1, unprogrammed default
  3501                           ;	Table Read Protection bit
  3502                           ;	EBTR1 = 0x1, unprogrammed default
  3503                           ;	Table Read Protection bit
  3504                           ;	EBTR2 = 0x1, unprogrammed default
  3505                           ;	Table Read Protection bit
  3506                           ;	EBTR3 = 0x1, unprogrammed default
  3507  30000C                     	org	3145740
  3508  30000C  0F                 	db	15
  3509                           
  3510                           ;Config register CONFIG7H @ 0x30000D
  3511                           ;	unspecified, using default values
  3512                           ;	Boot Block Table Read Protection bit
  3513                           ;	EBTRB = 0x1, unprogrammed default
  3514  30000D                     	org	3145741
  3515  30000D  40                 	db	64
  3516                           tosu	equ	0xFFF
  3517                           tosh	equ	0xFFE
  3518                           tosl	equ	0xFFD
  3519                           stkptr	equ	0xFFC
  3520                           pclatu	equ	0xFFB
  3521                           pclath	equ	0xFFA
  3522                           pcl	equ	0xFF9
  3523                           tblptru	equ	0xFF8
  3524                           tblptrh	equ	0xFF7
  3525                           tblptrl	equ	0xFF6
  3526                           tablat	equ	0xFF5
  3527                           prodh	equ	0xFF4
  3528                           prodl	equ	0xFF3
  3529                           indf0	equ	0xFEF
  3530                           postinc0	equ	0xFEE
  3531                           postdec0	equ	0xFED
  3532                           preinc0	equ	0xFEC
  3533                           plusw0	equ	0xFEB
  3534                           fsr0h	equ	0xFEA
  3535                           fsr0l	equ	0xFE9
  3536                           wreg	equ	0xFE8
  3537                           indf1	equ	0xFE7
  3538                           postinc1	equ	0xFE6
  3539                           postdec1	equ	0xFE5
  3540                           preinc1	equ	0xFE4
  3541                           plusw1	equ	0xFE3
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           bsr	equ	0xFE0
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           preinc2	equ	0xFDC
  3549                           plusw2	equ	0xFDB
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    limpa_matriz@matriz	PTR unsigned char [3] size(2) Largest target is 9
		 -> main@marcados(COMRAM[9]), verde(COMRAM[9]), cursor(COMRAM[9]), vermelho(COMRAM[9]), 

    testa_velha@teste2	PTR unsigned char [3] size(2) Largest target is 9
		 -> vermelho(COMRAM[9]), 

    testa_velha@teste1	PTR unsigned char [3] size(2) Largest target is 9
		 -> verde(COMRAM[9]), 

    testa_ganhou@teste	PTR unsigned char [3] size(2) Largest target is 9
		 -> verde(COMRAM[9]), vermelho(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->___wmul
    ___wmul->___awdiv

Critical Paths under _interrupt_PIC in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_PIC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_PIC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_PIC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_PIC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_PIC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_PIC in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   14023
                                             21 COMRAM    19    19      0
                            ___awdiv
                            ___awmod
                             ___wmul
                     _conf_interrupt
                       _limpa_matriz
                       _testa_ganhou
                        _testa_velha
 ---------------------------------------------------------------------------------
 (1) _testa_velha                                         12     8      4     400
                                              7 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _testa_ganhou                                         2     0      2     680
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _limpa_matriz                                         6     4      2    1526
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _conf_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    3199
                                             15 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    3336
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    3340
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interrupt_PIC                                        7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___wmul
     ___awdiv (ARG)
   _conf_interrupt
   _limpa_matriz
   _testa_ganhou
   _testa_velha

 _interrupt_PIC (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      49       1       57.9%
BITBIGSFRlhlllh     1E      0       0      20        0.0%
BITBIGSFRlhh        1A      0       0      17        0.0%
BITBIGSFRlhlh       13      0       0      18        0.0%
BITBIGSFRlhllll      F      0       0      22        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlhllh       C      0       0      19        0.0%
BITBIGSFRlhlllh      1      0       0      21        0.0%
BITBIGSFRllh         1      0       0      23        0.0%
BITBIGSFRlll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      25        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Jul 09 11:21:44 2022

  __end_of_interrupt_PIC 1164                       l60 13FE                       l64 0EE6  
                     l87 13BE                       l79 136C             ___awdiv@sign 000D  
    ___wmul@multiplicand 0012                      l132 13E4                      l363 1226  
                    l376 12D6                      l805 13E6                      l807 13F0  
                    l809 13F8                      u900 0CD8                      u901 0CD4  
                    u910 0CF8                      u911 0CF4                      u920 0D14  
                    u921 0D10                      u930 0D30                      u850 0C46  
                    u931 0D2C                      u851 0C42                      u940 0D4C  
                    u860 0C62                      u941 0D48                      u861 0C5E  
                    u950 0D68                      u870 0C7E                      u951 0D64  
                    u871 0C7A                      u960 0D84                      u880 0CA0  
                    u961 0D80                      u881 0C9C                      u970 0DA4  
                    u890 0CBC                      u971 0DA0                      u891 0CB8  
                    u980 0DC0                      u981 0DBC                      u990 0DDC  
                    u991 0DD8                      _cor 002C             ___awmod@sign 000D  
                    prod 000FF3                      wreg 000FE8                     l1321 0C46  
                   l1331 0CA0                     l1323 0C62                     l1403 12D8  
                   l1501 1206                     l1341 0CF8                     l1333 0CBC  
                   l1325 0C7E                     l1421 1340                     l1503 1216  
                   l1511 122C                     l1351 0D4C                     l1343 0D14  
                   l1319 0C2E                     l1423 1342                     l1415 12E4  
                   l1505 121E                     l1521 125C                     l1513 123A  
                   l1361 0DA4                     l1353 0D68                     l1329 0C84  
                   l1433 136A                     l1425 1352                     l1417 132E  
                   l1409 12E0                     l1601 0120                     l1531 12A2  
                   l1523 126E                     l1515 1242                     l1451 139A  
                   l1443 1372                     l1371 0DFC                     l1363 0DC0  
                   l1339 0CDC                     l1427 1364                     l1419 1330  
                   l1611 01F8                     l1603 0124                     l1541 12CE  
                   l1533 12AA                     l1525 1276                     l1517 1246  
                   l1509 1228                     l1461 13DC                     l1453 139C  
                   l1437 136E                     l1381 0E50                     l1373 0E18  
                   l1349 0D34                     l1701 08FE                     l1621 027A  
                   l1613 01F8                     l1471 117E                     l1535 12B0  
                   l1527 127E                     l1519 1254                     l1455 13AC  
                   l1391 0EA8                     l1383 0E6C                     l1359 0D88  
                   l1631 02BC                     l1623 028A                     l1615 0208  
                   l1607 0194                     l1551 002E                     l1481 11A4  
                   l1473 1182                     l1465 1164                     l1529 128C  
                   l1537 12B6                     l1457 13AE                     l1449 1376  
                   l1393 0EC4                     l1369 0DE0                     l1721 09C2  
                   l1713 0994                     l1705 0912                     l1641 046C  
                   l1633 0328                     l1625 028E                     l1617 0268  
                   l1609 0198                     l1561 0054                     l1553 003A  
                   l1545 0012                     l1491 11DA                     l1483 11B6  
                   l1475 1190                     l1467 1168                     l1539 12C6  
                   l1459 13C0                     l1379 0E38                     l1731 0A1A  
                   l1723 09C6                     l1707 0976                     l1715 099C  
                   l1651 066C                     l1643 04D8                     l1635 0394  
                   l1627 029C                     l1619 026C                     l1571 0064  
                   l1563 0058                     l1555 0046                     l1547 0016  
                   l1493 11F0                     l1485 11BE                     l1477 1198  
                   l1469 1176                     l1389 0E8C                     l1741 0A98  
                   l1733 0A1C                     l1725 09CA                     l1717 09B2  
                   l1709 098E                     l1661 06F8                     l1653 0672  
                   l1645 0544                     l1637 0454                     l1629 02AC  
                   l1581 0076                     l1573 0068                     l1565 005C  
                   l1557 004E                     l1549 0022                     l1495 11F8  
                   l1487 11C6                     l1479 119C                     l1399 0EE4  
                   l1751 0ADA                     l1743 0A9A                     l1735 0A20  
                   l1719 09BE                     l1727 09CE                     l1663 06FC  
                   l1655 0684                     l1647 0604                     l1639 045C  
                   l1671 07D0                     l1591 0094                     l1583 007A  
                   l1575 006C                     l1567 0060                     l1559 0052  
                   l1497 11FA                     l1489 11D4                     l1745 0AAC  
                   l1737 0A28                     l1729 09EA                     l1681 083E  
                   l1673 07DE                     l1657 0688                     l1665 075C  
                   l1649 0608                     l1593 00A4                     l1585 007E  
                   l1577 006E                     l1569 0064                     l1499 1200  
                   l1771 0B9E                     l1763 0B70                     l1755 0AEE  
                   l1747 0AC4                     l1739 0A80                     l1691 08BC  
                   l1683 0840                     l1675 07EE                     l1667 076C  
                   l1595 00A8                     l1587 0082                     l1579 0072  
                   l1781 0BFE                     l1773 0BA2                     l1757 0B52  
                   l1749 0AD6                     l1765 0B78                     l1693 08BE  
                   l1685 0844                     l1677 07F2                     l1669 07CC  
                   l1597 0108                     l1589 0086                     l1783 0C16  
                   l1775 0BA6                     l1767 0B8E                     l1759 0B6A  
                   l1695 08D0                     l1687 084C                     l1679 080E  
                   l1599 010E                     l1785 0C1A                     l1769 0B9A  
                   l1777 0BAA                     l1697 08E8                     l1689 08A4  
                   l1787 0C1E                     l1779 0BCE                     l1699 08FA  
                   l1789 0C22                     u1000 0DFC                     u1001 0DF8  
                   u1010 0E18                     u1011 0E14                     u1020 0E34  
                   u1100 1352                     u1021 0E30                     u1101 134E  
                   u1030 0E50                     u1110 1364                     u1031 0E4C  
                   u1111 1360                     u1200 123A                     u1120 13AC  
                   u1040 0E6C                     u1201 1236                     u1121 13A8  
                   u1041 0E68                     u1210 1254                     u1130 13BE  
                   u1050 0E88                     u1211 1250                     u1131 13BA  
                   u1051 0E84                     u1140 1176                     u1220 126E  
                   u1060 0EA8                     u1300 0208                     u1141 1172  
                   u1221 126A                     u1061 0EA4                     u1301 0204  
                   u1150 1190                     u1230 128C                     u1070 0EC4  
                   u1310 027A                     u1151 118C                     u1231 1288  
                   u1071 0EC0                     u1311 0276                     u1160 11B6  
                   u1240 12A2                     u1080 0EE0                     u1400 0544  
                   u1320 028A                     u1161 11B2                     u1241 129E  
                   u1081 0EDC                     u1401 0540                     u1321 0286  
                   u1170 11D4                     u1250 12C6                     u1090 1340  
                   u1410 0684                     u1330 029C                     u1171 11D0  
                   u1251 12C2                     u1091 133C                     u1411 0680  
                   u1331 0298                     u1180 11F0                     u1500 09EA  
                   u1420 06F4                     u1340 02AC                     u1260 0094  
                   u1181 11EC                     u1501 09E6                     u1421 06F0  
                   u1341 02A8                     u1261 0090                     u1190 1216  
                   u1510 0AAC                     u1430 076C                     u1350 02BC  
                   u1270 00A4                     u1191 1212                     u1511 0AA8  
                   u1431 0768                     u1351 02B8                     u1271 00A0  
                   u1520 0AD6                     u1440 07DE                     u1360 0328  
                   u1280 0120                     u1521 0AD2                     u1441 07DA  
                   u1361 0324                     u1281 011C                     u1530 0AEA  
                   u1450 07EE                     u1370 0394                     u1290 0190  
                   u1531 0AE6                     u1451 07EA                     u1371 0390  
                   u1291 018C                     u1540 0BCE                     u1460 080E  
                   u1380 046C                     u1541 0BCA                     u1461 080A  
                   u1381 0468                     u1470 08D0                     u1390 04D8  
                   u1607 0AB6                     u1471 08CC                     u1391 04D4  
                   u1480 08FA                     u1617 0B5C                     u1481 08F6  
                   u1490 090E                     u1627 0B82                     u1491 090A  
                   u1637 0C08                     u1557 08AE                     u1567 08DA  
                   u1577 0980                     u1587 09A6                     u1597 0A8A  
                   i2l57 1150             testa_velha@i 0012             testa_velha@j 0013  
                   _cont 002B                     _main 0012                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 004A  
            main@posicao 0028                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 1228          __end_of___awmod 12D8                    _CMCON 000FB4  
        ___awdiv@divisor 000A             main@marcados 0019          ___awdiv@counter 000C  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
                  _conta 002D                    _linha 002E                    _pisca 0029  
                  _verde 0041                    main@i 0027                    ttemp5 004B  
                  ttemp6 004E                    ttemp7 0052                    status 000FD8  
                  wtemp8 004B          __initialization 1400             __end_of_main 0C2E  
                 ??_main 0016            __activetblptr 000000                   _ADCON1 000FC1  
       ___awdiv@dividend 0008                   i2l1041 0F1C                   i2l1051 0F58  
                 i2l1043 0F26                   i2l1061 1116                   i2l1053 10FC  
                 i2l1045 0F36                   i2l1037 0EFA                   i2l1071 114E  
                 i2l1063 1128                   i2l1055 10FE                   i2l1047 0F40  
                 i2l1039 0F08                   i2l1065 112C                   i2l1057 1110  
                 i2l1049 0F52                   i2l1067 1146                   i2l1059 1114  
                 i2l1069 114A                   _INTCON 000FF2         ??_conf_interrupt 0008  
                 ___wmul 13C0                ??___awdiv 000C                ??___awmod 000C  
          ?_limpa_matriz 0008                   _cursor 002F                   clear_0 1406  
       ___awdiv@quotient 000E          ___awmod@divisor 000A                   isa$std 000001  
        ___awmod@counter 000C   main@pontuacao_vermelho 0025             ?_testa_velha 0008  
             __accesstop 0080  __end_of__initialization 140C            ___rparam_used 000001  
         __pcstackCOMRAM 0001           ??_limpa_matriz 000A                  ?___wmul 0010  
                i2u50_40 10E4                  i2u42_40 0F08                  i2u50_41 10DE  
                i2u42_41 0F04                  i2u51_40 10E6                  i2u43_40 0F1C  
                i2u43_41 0F18                  i2u52_40 1110                  i2u44_40 0F36  
                i2u52_41 110C                  i2u44_41 0F32                  i2u53_40 1128  
                i2u45_40 0F52                  i2u53_41 1124                  i2u45_41 0F4E  
                i2u54_40 1140                  i2u46_40 1040                  i2u54_41 113A  
                i2u46_41 103A                  i2u55_40 1142                  i2u47_40 1042  
                i2u48_40 1094                  i2u48_41 108E                  i2u49_40 1096  
        testa_velha@soma 0011                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 1164                  ___awmod 1228                  __pcinit 1400  
                __ramtop 0600                  __ptext0 0012                  __ptext1 12D8  
                __ptext2 0C2E                  __ptext3 136E                  __ptext4 13E6  
                __ptext5 13C0                  __ptext6 1228                  __ptext7 1164  
              _T0CONbits 000FD5         ___awmod@dividend 0008                  main@aux 0024  
         __pintcode_body 0EE8     end_of_initialization 140C     __end_of_limpa_matriz 13C0  
                int_func 0EE8                  postinc0 000FEE                  postinc2 000FDE  
          _interrupt_PIC 0008            ?_testa_ganhou 0008                _PORTBbits 000F81  
              _PORTDbits 000F83        testa_velha@teste1 0008        testa_velha@teste2 000A  
         ?_interrupt_PIC 0001           ??_testa_ganhou 000A           __end_of___wmul 13E6  
    start_initialization 1400                 ??___wmul 0014              __pbssCOMRAM 0029  
        ??_interrupt_PIC 0001                __pintcode 0008                 ?___awdiv 0008  
               ?___awmod 0008             _limpa_matriz 136E     __end_of_testa_ganhou 0EE8  
         ___wmul@product 0014        ___wmul@multiplier 0010            ??_testa_velha 000C  
    main@pontuacao_verde 0026                 __Hrparam 0000                 __Lrparam 0000  
         _conf_interrupt 13E6      __end_of_testa_velha 136E                 isa$xinst 000000  
               int$flags 004A                 _vermelho 0038   __end_of_conf_interrupt 1400  
     limpa_matriz@matriz 0008               _INTCONbits 000FF2                 intlevel2 0000  
        ?_conf_interrupt 0001             _testa_ganhou 0C2E              _testa_velha 12D8  
           main@MOVE_Old 0023              main@SEL_Old 0022        testa_ganhou@teste 0008  
          limpa_matriz@i 000C            limpa_matriz@j 000D  
